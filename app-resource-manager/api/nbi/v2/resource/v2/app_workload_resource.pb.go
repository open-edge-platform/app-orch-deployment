// SPDX-FileCopyrightText: (C) 2023 Intel Corporation
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: resource/v2/app_workload_resource.proto

package resourcev2

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AppWorkload_Type int32

const (
	AppWorkload_TYPE_UNSPECIFIED     AppWorkload_Type = 0
	AppWorkload_TYPE_VIRTUAL_MACHINE AppWorkload_Type = 1
	AppWorkload_TYPE_POD             AppWorkload_Type = 2
)

// Enum value maps for AppWorkload_Type.
var (
	AppWorkload_Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "TYPE_VIRTUAL_MACHINE",
		2: "TYPE_POD",
	}
	AppWorkload_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED":     0,
		"TYPE_VIRTUAL_MACHINE": 1,
		"TYPE_POD":             2,
	}
)

func (x AppWorkload_Type) Enum() *AppWorkload_Type {
	p := new(AppWorkload_Type)
	*p = x
	return p
}

func (x AppWorkload_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppWorkload_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_v2_app_workload_resource_proto_enumTypes[0].Descriptor()
}

func (AppWorkload_Type) Type() protoreflect.EnumType {
	return &file_resource_v2_app_workload_resource_proto_enumTypes[0]
}

func (x AppWorkload_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AppWorkload_Type.Descriptor instead.
func (AppWorkload_Type) EnumDescriptor() ([]byte, []int) {
	return file_resource_v2_app_workload_resource_proto_rawDescGZIP(), []int{0, 0}
}

// AppWorkload a high-level abstraction for representing different types of application workloads.
// The application workloads can be virtual machine-based or container-based.
type AppWorkload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Application workload type, e.g. virtual machine and pod.
	Type AppWorkload_Type `protobuf:"varint,1,opt,name=type,proto3,enum=resource.v2.AppWorkload_Type" json:"type,omitempty"`
	// Workload UUID
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// Workload name
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Namespace where the workload is created.
	Namespace string `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// The time when the workload is created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Ready status to determines if a workload is fully functional or not.
	WorkloadReady bool `protobuf:"varint,7,opt,name=workload_ready,json=workloadReady,proto3" json:"workload_ready,omitempty"`
	// workload for each type of workload there will be one
	// specific object that includes workload specific attributes
	//
	// Types that are assignable to Workload:
	//
	//	*AppWorkload_VirtualMachine
	//	*AppWorkload_Pod
	Workload isAppWorkload_Workload `protobuf_oneof:"workload"`
}

func (x *AppWorkload) Reset() {
	*x = AppWorkload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_v2_app_workload_resource_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppWorkload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppWorkload) ProtoMessage() {}

func (x *AppWorkload) ProtoReflect() protoreflect.Message {
	mi := &file_resource_v2_app_workload_resource_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppWorkload.ProtoReflect.Descriptor instead.
func (*AppWorkload) Descriptor() ([]byte, []int) {
	return file_resource_v2_app_workload_resource_proto_rawDescGZIP(), []int{0}
}

func (x *AppWorkload) GetType() AppWorkload_Type {
	if x != nil {
		return x.Type
	}
	return AppWorkload_TYPE_UNSPECIFIED
}

func (x *AppWorkload) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AppWorkload) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AppWorkload) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *AppWorkload) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *AppWorkload) GetWorkloadReady() bool {
	if x != nil {
		return x.WorkloadReady
	}
	return false
}

func (m *AppWorkload) GetWorkload() isAppWorkload_Workload {
	if m != nil {
		return m.Workload
	}
	return nil
}

func (x *AppWorkload) GetVirtualMachine() *VirtualMachine {
	if x, ok := x.GetWorkload().(*AppWorkload_VirtualMachine); ok {
		return x.VirtualMachine
	}
	return nil
}

func (x *AppWorkload) GetPod() *Pod {
	if x, ok := x.GetWorkload().(*AppWorkload_Pod); ok {
		return x.Pod
	}
	return nil
}

type isAppWorkload_Workload interface {
	isAppWorkload_Workload()
}

type AppWorkload_VirtualMachine struct {
	VirtualMachine *VirtualMachine `protobuf:"bytes,8,opt,name=virtual_machine,json=virtualMachine,proto3,oneof"`
}

type AppWorkload_Pod struct {
	Pod *Pod `protobuf:"bytes,9,opt,name=pod,proto3,oneof"`
}

func (*AppWorkload_VirtualMachine) isAppWorkload_Workload() {}

func (*AppWorkload_Pod) isAppWorkload_Workload() {}

var File_resource_v2_app_workload_resource_proto protoreflect.FileDescriptor

var file_resource_v2_app_workload_resource_proto_rawDesc = []byte{
	0x0a, 0x27, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x70,
	0x70, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x76, 0x32, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2f, 0x76, 0x32, 0x2f, 0x70, 0x6f, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2f, 0x76, 0x32, 0x2f, 0x76, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xf3, 0x03, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x70, 0x70,
	0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0b, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x43, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2f,
	0xe0, 0x41, 0x02, 0xfa, 0x42, 0x29, 0x72, 0x27, 0x10, 0x01, 0x18, 0xfd, 0x01, 0x32, 0x20, 0x5e,
	0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x28, 0x5b, 0x2d, 0x61, 0x2d, 0x7a, 0x30, 0x2d,
	0x39, 0x2d, 0x5d, 0x2a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x3f, 0x24, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x0e, 0x77, 0x6f,
	0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12, 0x46, 0x0a, 0x0f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x5f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x48, 0x00, 0x52, 0x0e,
	0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x24,
	0x0a, 0x03, 0x70, 0x6f, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6f, 0x64, 0x48, 0x00, 0x52,
	0x03, 0x70, 0x6f, 0x64, 0x22, 0x44, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x56, 0x49, 0x52, 0x54, 0x55,
	0x41, 0x4c, 0x5f, 0x4d, 0x41, 0x43, 0x48, 0x49, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x4f, 0x44, 0x10, 0x02, 0x42, 0x0a, 0x0a, 0x08, 0x77, 0x6f,
	0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0xdb, 0x01, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x76, 0x32, 0x42, 0x18, 0x41, 0x70, 0x70, 0x57,
	0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x61, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x2d, 0x74, 0x69, 0x62, 0x65, 0x72, 0x2f, 0x61,
	0x70, 0x70, 0x2d, 0x6f, 0x72, 0x63, 0x68, 0x2d, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x2f, 0x61, 0x70, 0x70, 0x2d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2d,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x62, 0x69, 0x2f,
	0x76, 0x32, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x76, 0x32, 0x3b, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x76, 0x32, 0xa2, 0x02, 0x03, 0x52, 0x58, 0x58, 0xaa,
	0x02, 0x0b, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x56, 0x32, 0xca, 0x02, 0x0b,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5c, 0x56, 0x32, 0xe2, 0x02, 0x17, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5c, 0x56, 0x32, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x3a, 0x3a, 0x56, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_resource_v2_app_workload_resource_proto_rawDescOnce sync.Once
	file_resource_v2_app_workload_resource_proto_rawDescData = file_resource_v2_app_workload_resource_proto_rawDesc
)

func file_resource_v2_app_workload_resource_proto_rawDescGZIP() []byte {
	file_resource_v2_app_workload_resource_proto_rawDescOnce.Do(func() {
		file_resource_v2_app_workload_resource_proto_rawDescData = protoimpl.X.CompressGZIP(file_resource_v2_app_workload_resource_proto_rawDescData)
	})
	return file_resource_v2_app_workload_resource_proto_rawDescData
}

var file_resource_v2_app_workload_resource_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_resource_v2_app_workload_resource_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_resource_v2_app_workload_resource_proto_goTypes = []any{
	(AppWorkload_Type)(0),         // 0: resource.v2.AppWorkload.Type
	(*AppWorkload)(nil),           // 1: resource.v2.AppWorkload
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
	(*VirtualMachine)(nil),        // 3: resource.v2.VirtualMachine
	(*Pod)(nil),                   // 4: resource.v2.Pod
}
var file_resource_v2_app_workload_resource_proto_depIdxs = []int32{
	0, // 0: resource.v2.AppWorkload.type:type_name -> resource.v2.AppWorkload.Type
	2, // 1: resource.v2.AppWorkload.create_time:type_name -> google.protobuf.Timestamp
	3, // 2: resource.v2.AppWorkload.virtual_machine:type_name -> resource.v2.VirtualMachine
	4, // 3: resource.v2.AppWorkload.pod:type_name -> resource.v2.Pod
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_resource_v2_app_workload_resource_proto_init() }
func file_resource_v2_app_workload_resource_proto_init() {
	if File_resource_v2_app_workload_resource_proto != nil {
		return
	}
	file_resource_v2_pod_resource_proto_init()
	file_resource_v2_vm_resource_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_resource_v2_app_workload_resource_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*AppWorkload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_resource_v2_app_workload_resource_proto_msgTypes[0].OneofWrappers = []any{
		(*AppWorkload_VirtualMachine)(nil),
		(*AppWorkload_Pod)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_resource_v2_app_workload_resource_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_resource_v2_app_workload_resource_proto_goTypes,
		DependencyIndexes: file_resource_v2_app_workload_resource_proto_depIdxs,
		EnumInfos:         file_resource_v2_app_workload_resource_proto_enumTypes,
		MessageInfos:      file_resource_v2_app_workload_resource_proto_msgTypes,
	}.Build()
	File_resource_v2_app_workload_resource_proto = out.File
	file_resource_v2_app_workload_resource_proto_rawDesc = nil
	file_resource_v2_app_workload_resource_proto_goTypes = nil
	file_resource_v2_app_workload_resource_proto_depIdxs = nil
}
