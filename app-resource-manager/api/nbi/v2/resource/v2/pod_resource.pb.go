// SPDX-FileCopyrightText: (C) 2023 Intel Corporation
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: resource/v2/pod_resource.proto

package resourcev2

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PodStatus_State int32

const (
	PodStatus_STATE_UNSPECIFIED PodStatus_State = 0
	PodStatus_STATE_PENDING     PodStatus_State = 1
	PodStatus_STATE_RUNNING     PodStatus_State = 2
	PodStatus_STATE_SUCCEEDED   PodStatus_State = 3
	PodStatus_STATE_FAILED      PodStatus_State = 4
)

// Enum value maps for PodStatus_State.
var (
	PodStatus_State_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "STATE_PENDING",
		2: "STATE_RUNNING",
		3: "STATE_SUCCEEDED",
		4: "STATE_FAILED",
	}
	PodStatus_State_value = map[string]int32{
		"STATE_UNSPECIFIED": 0,
		"STATE_PENDING":     1,
		"STATE_RUNNING":     2,
		"STATE_SUCCEEDED":   3,
		"STATE_FAILED":      4,
	}
)

func (x PodStatus_State) Enum() *PodStatus_State {
	p := new(PodStatus_State)
	*p = x
	return p
}

func (x PodStatus_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PodStatus_State) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_v2_pod_resource_proto_enumTypes[0].Descriptor()
}

func (PodStatus_State) Type() protoreflect.EnumType {
	return &file_resource_v2_pod_resource_proto_enumTypes[0]
}

func (x PodStatus_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PodStatus_State.Descriptor instead.
func (PodStatus_State) EnumDescriptor() ([]byte, []int) {
	return file_resource_v2_pod_resource_proto_rawDescGZIP(), []int{1, 0}
}

// Represents a pod resource.
type Pod struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// containers list of containers per pod
	Containers []*Container `protobuf:"bytes,1,rep,name=containers,proto3" json:"containers,omitempty"`
	// status pod status
	Status        *PodStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Pod) Reset() {
	*x = Pod{}
	mi := &file_resource_v2_pod_resource_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pod) ProtoMessage() {}

func (x *Pod) ProtoReflect() protoreflect.Message {
	mi := &file_resource_v2_pod_resource_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pod.ProtoReflect.Descriptor instead.
func (*Pod) Descriptor() ([]byte, []int) {
	return file_resource_v2_pod_resource_proto_rawDescGZIP(), []int{0}
}

func (x *Pod) GetContainers() []*Container {
	if x != nil {
		return x.Containers
	}
	return nil
}

func (x *Pod) GetStatus() *PodStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// The status of the pod during its lifecycle.
type PodStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// State information
	State         PodStatus_State `protobuf:"varint,1,opt,name=state,proto3,enum=resource.v2.PodStatus_State" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PodStatus) Reset() {
	*x = PodStatus{}
	mi := &file_resource_v2_pod_resource_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PodStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodStatus) ProtoMessage() {}

func (x *PodStatus) ProtoReflect() protoreflect.Message {
	mi := &file_resource_v2_pod_resource_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodStatus.ProtoReflect.Descriptor instead.
func (*PodStatus) Descriptor() ([]byte, []int) {
	return file_resource_v2_pod_resource_proto_rawDescGZIP(), []int{1}
}

func (x *PodStatus) GetState() PodStatus_State {
	if x != nil {
		return x.State
	}
	return PodStatus_STATE_UNSPECIFIED
}

// Represents a container resource.
type Container struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Container name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// image_name container image name
	ImageName string `protobuf:"bytes,2,opt,name=image_name,json=imageName,proto3" json:"image_name,omitempty"`
	// Number of times that a container is restarted.
	RestartCount int32 `protobuf:"varint,3,opt,name=restart_count,json=restartCount,proto3" json:"restart_count,omitempty"`
	// status status of a container
	Status        *ContainerStatus `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Container) Reset() {
	*x = Container{}
	mi := &file_resource_v2_pod_resource_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Container) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Container) ProtoMessage() {}

func (x *Container) ProtoReflect() protoreflect.Message {
	mi := &file_resource_v2_pod_resource_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Container.ProtoReflect.Descriptor instead.
func (*Container) Descriptor() ([]byte, []int) {
	return file_resource_v2_pod_resource_proto_rawDescGZIP(), []int{2}
}

func (x *Container) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Container) GetImageName() string {
	if x != nil {
		return x.ImageName
	}
	return ""
}

func (x *Container) GetRestartCount() int32 {
	if x != nil {
		return x.RestartCount
	}
	return 0
}

func (x *Container) GetStatus() *ContainerStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// ContainerStatus status of a container
type ContainerStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to State:
	//
	//	*ContainerStatus_ContainerStateWaiting
	//	*ContainerStatus_ContainerStateRunning
	//	*ContainerStatus_ContainerStateTerminated
	State         isContainerStatus_State `protobuf_oneof:"state"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerStatus) Reset() {
	*x = ContainerStatus{}
	mi := &file_resource_v2_pod_resource_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerStatus) ProtoMessage() {}

func (x *ContainerStatus) ProtoReflect() protoreflect.Message {
	mi := &file_resource_v2_pod_resource_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerStatus.ProtoReflect.Descriptor instead.
func (*ContainerStatus) Descriptor() ([]byte, []int) {
	return file_resource_v2_pod_resource_proto_rawDescGZIP(), []int{3}
}

func (x *ContainerStatus) GetState() isContainerStatus_State {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *ContainerStatus) GetContainerStateWaiting() *ContainerStateWaiting {
	if x != nil {
		if x, ok := x.State.(*ContainerStatus_ContainerStateWaiting); ok {
			return x.ContainerStateWaiting
		}
	}
	return nil
}

func (x *ContainerStatus) GetContainerStateRunning() *ContainerStateRunning {
	if x != nil {
		if x, ok := x.State.(*ContainerStatus_ContainerStateRunning); ok {
			return x.ContainerStateRunning
		}
	}
	return nil
}

func (x *ContainerStatus) GetContainerStateTerminated() *ContainerStateTerminated {
	if x != nil {
		if x, ok := x.State.(*ContainerStatus_ContainerStateTerminated); ok {
			return x.ContainerStateTerminated
		}
	}
	return nil
}

type isContainerStatus_State interface {
	isContainerStatus_State()
}

type ContainerStatus_ContainerStateWaiting struct {
	ContainerStateWaiting *ContainerStateWaiting `protobuf:"bytes,1,opt,name=container_state_waiting,json=containerStateWaiting,proto3,oneof"`
}

type ContainerStatus_ContainerStateRunning struct {
	ContainerStateRunning *ContainerStateRunning `protobuf:"bytes,2,opt,name=container_state_running,json=containerStateRunning,proto3,oneof"`
}

type ContainerStatus_ContainerStateTerminated struct {
	ContainerStateTerminated *ContainerStateTerminated `protobuf:"bytes,3,opt,name=container_state_terminated,json=containerStateTerminated,proto3,oneof"`
}

func (*ContainerStatus_ContainerStateWaiting) isContainerStatus_State() {}

func (*ContainerStatus_ContainerStateRunning) isContainerStatus_State() {}

func (*ContainerStatus_ContainerStateTerminated) isContainerStatus_State() {}

// Waiting status of a container including the reason and message.
type ContainerStateWaiting struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Reason of the waiting status.
	Reason string `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
	// Message of the waiting status.
	Message       string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerStateWaiting) Reset() {
	*x = ContainerStateWaiting{}
	mi := &file_resource_v2_pod_resource_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerStateWaiting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerStateWaiting) ProtoMessage() {}

func (x *ContainerStateWaiting) ProtoReflect() protoreflect.Message {
	mi := &file_resource_v2_pod_resource_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerStateWaiting.ProtoReflect.Descriptor instead.
func (*ContainerStateWaiting) Descriptor() ([]byte, []int) {
	return file_resource_v2_pod_resource_proto_rawDescGZIP(), []int{4}
}

func (x *ContainerStateWaiting) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ContainerStateWaiting) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Running status of a container.
type ContainerStateRunning struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerStateRunning) Reset() {
	*x = ContainerStateRunning{}
	mi := &file_resource_v2_pod_resource_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerStateRunning) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerStateRunning) ProtoMessage() {}

func (x *ContainerStateRunning) ProtoReflect() protoreflect.Message {
	mi := &file_resource_v2_pod_resource_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerStateRunning.ProtoReflect.Descriptor instead.
func (*ContainerStateRunning) Descriptor() ([]byte, []int) {
	return file_resource_v2_pod_resource_proto_rawDescGZIP(), []int{5}
}

// Termination status of a container.
type ContainerStateTerminated struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Reason of the termination.
	Reason string `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
	// Message of the termination status.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Exit code of the termination status.
	ExitCode      int32 `protobuf:"varint,3,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerStateTerminated) Reset() {
	*x = ContainerStateTerminated{}
	mi := &file_resource_v2_pod_resource_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerStateTerminated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerStateTerminated) ProtoMessage() {}

func (x *ContainerStateTerminated) ProtoReflect() protoreflect.Message {
	mi := &file_resource_v2_pod_resource_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerStateTerminated.ProtoReflect.Descriptor instead.
func (*ContainerStateTerminated) Descriptor() ([]byte, []int) {
	return file_resource_v2_pod_resource_proto_rawDescGZIP(), []int{6}
}

func (x *ContainerStateTerminated) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ContainerStateTerminated) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ContainerStateTerminated) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

var File_resource_v2_pod_resource_proto protoreflect.FileDescriptor

const file_resource_v2_pod_resource_proto_rawDesc = "" +
	"\n" +
	"\x1eresource/v2/pod_resource.proto\x12\vresource.v2\x1a\x1fgoogle/api/field_behavior.proto\x1a\x17validate/validate.proto\"|\n" +
	"\x03Pod\x12@\n" +
	"\n" +
	"containers\x18\x01 \x03(\v2\x16.resource.v2.ContainerB\b\xfaB\x05\x92\x01\x02\x102R\n" +
	"containers\x123\n" +
	"\x06status\x18\x02 \x01(\v2\x16.resource.v2.PodStatusB\x03\xe0A\x03R\x06status\"\xac\x01\n" +
	"\tPodStatus\x122\n" +
	"\x05state\x18\x01 \x01(\x0e2\x1c.resource.v2.PodStatus.StateR\x05state\"k\n" +
	"\x05State\x12\x15\n" +
	"\x11STATE_UNSPECIFIED\x10\x00\x12\x11\n" +
	"\rSTATE_PENDING\x10\x01\x12\x11\n" +
	"\rSTATE_RUNNING\x10\x02\x12\x13\n" +
	"\x0fSTATE_SUCCEEDED\x10\x03\x12\x10\n" +
	"\fSTATE_FAILED\x10\x04\"\xd8\x01\n" +
	"\tContainer\x12B\n" +
	"\x04name\x18\x01 \x01(\tB.\xe0A\x02\xfaB(r&\x10\x01\x18?2 ^[a-z0-9]([-a-z0-9-]*[a-z0-9])?$R\x04name\x12\"\n" +
	"\n" +
	"image_name\x18\x02 \x01(\tB\x03\xe0A\x03R\timageName\x12(\n" +
	"\rrestart_count\x18\x03 \x01(\x05B\x03\xe0A\x03R\frestartCount\x129\n" +
	"\x06status\x18\x04 \x01(\v2\x1c.resource.v2.ContainerStatusB\x03\xe0A\x03R\x06status\"\xbd\x02\n" +
	"\x0fContainerStatus\x12\\\n" +
	"\x17container_state_waiting\x18\x01 \x01(\v2\".resource.v2.ContainerStateWaitingH\x00R\x15containerStateWaiting\x12\\\n" +
	"\x17container_state_running\x18\x02 \x01(\v2\".resource.v2.ContainerStateRunningH\x00R\x15containerStateRunning\x12e\n" +
	"\x1acontainer_state_terminated\x18\x03 \x01(\v2%.resource.v2.ContainerStateTerminatedH\x00R\x18containerStateTerminatedB\a\n" +
	"\x05state\"S\n" +
	"\x15ContainerStateWaiting\x12\x1b\n" +
	"\x06reason\x18\x01 \x01(\tB\x03\xe0A\x03R\x06reason\x12\x1d\n" +
	"\amessage\x18\x02 \x01(\tB\x03\xe0A\x03R\amessage\"\x17\n" +
	"\x15ContainerStateRunning\"x\n" +
	"\x18ContainerStateTerminated\x12\x1b\n" +
	"\x06reason\x18\x01 \x01(\tB\x03\xe0A\x03R\x06reason\x12\x1d\n" +
	"\amessage\x18\x02 \x01(\tB\x03\xe0A\x03R\amessage\x12 \n" +
	"\texit_code\x18\x03 \x01(\x05B\x03\xe0A\x03R\bexitCodeB\xda\x01\n" +
	"\x0fcom.resource.v2B\x10PodResourceProtoP\x01Zhgithub.com/open-edge-platform/app-orch-deployment/app-resource-manager/api/nbi/v2/resource/v2;resourcev2\xa2\x02\x03RXX\xaa\x02\vResource.V2\xca\x02\vResource\\V2\xe2\x02\x17Resource\\V2\\GPBMetadata\xea\x02\fResource::V2b\x06proto3"

var (
	file_resource_v2_pod_resource_proto_rawDescOnce sync.Once
	file_resource_v2_pod_resource_proto_rawDescData []byte
)

func file_resource_v2_pod_resource_proto_rawDescGZIP() []byte {
	file_resource_v2_pod_resource_proto_rawDescOnce.Do(func() {
		file_resource_v2_pod_resource_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_resource_v2_pod_resource_proto_rawDesc), len(file_resource_v2_pod_resource_proto_rawDesc)))
	})
	return file_resource_v2_pod_resource_proto_rawDescData
}

var file_resource_v2_pod_resource_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_resource_v2_pod_resource_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_resource_v2_pod_resource_proto_goTypes = []any{
	(PodStatus_State)(0),             // 0: resource.v2.PodStatus.State
	(*Pod)(nil),                      // 1: resource.v2.Pod
	(*PodStatus)(nil),                // 2: resource.v2.PodStatus
	(*Container)(nil),                // 3: resource.v2.Container
	(*ContainerStatus)(nil),          // 4: resource.v2.ContainerStatus
	(*ContainerStateWaiting)(nil),    // 5: resource.v2.ContainerStateWaiting
	(*ContainerStateRunning)(nil),    // 6: resource.v2.ContainerStateRunning
	(*ContainerStateTerminated)(nil), // 7: resource.v2.ContainerStateTerminated
}
var file_resource_v2_pod_resource_proto_depIdxs = []int32{
	3, // 0: resource.v2.Pod.containers:type_name -> resource.v2.Container
	2, // 1: resource.v2.Pod.status:type_name -> resource.v2.PodStatus
	0, // 2: resource.v2.PodStatus.state:type_name -> resource.v2.PodStatus.State
	4, // 3: resource.v2.Container.status:type_name -> resource.v2.ContainerStatus
	5, // 4: resource.v2.ContainerStatus.container_state_waiting:type_name -> resource.v2.ContainerStateWaiting
	6, // 5: resource.v2.ContainerStatus.container_state_running:type_name -> resource.v2.ContainerStateRunning
	7, // 6: resource.v2.ContainerStatus.container_state_terminated:type_name -> resource.v2.ContainerStateTerminated
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_resource_v2_pod_resource_proto_init() }
func file_resource_v2_pod_resource_proto_init() {
	if File_resource_v2_pod_resource_proto != nil {
		return
	}
	file_resource_v2_pod_resource_proto_msgTypes[3].OneofWrappers = []any{
		(*ContainerStatus_ContainerStateWaiting)(nil),
		(*ContainerStatus_ContainerStateRunning)(nil),
		(*ContainerStatus_ContainerStateTerminated)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_resource_v2_pod_resource_proto_rawDesc), len(file_resource_v2_pod_resource_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_resource_v2_pod_resource_proto_goTypes,
		DependencyIndexes: file_resource_v2_pod_resource_proto_depIdxs,
		EnumInfos:         file_resource_v2_pod_resource_proto_enumTypes,
		MessageInfos:      file_resource_v2_pod_resource_proto_msgTypes,
	}.Build()
	File_resource_v2_pod_resource_proto = out.File
	file_resource_v2_pod_resource_proto_goTypes = nil
	file_resource_v2_pod_resource_proto_depIdxs = nil
}
