// SPDX-FileCopyrightText: (C) 2023 Intel Corporation
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: resource/v2/vm_resource.proto

package resourcev2

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AdminStatus_State int32

const (
	AdminStatus_STATE_UNSPECIFIED AdminStatus_State = 0
	AdminStatus_STATE_UP          AdminStatus_State = 1
	AdminStatus_STATE_DOWN        AdminStatus_State = 2
)

// Enum value maps for AdminStatus_State.
var (
	AdminStatus_State_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "STATE_UP",
		2: "STATE_DOWN",
	}
	AdminStatus_State_value = map[string]int32{
		"STATE_UNSPECIFIED": 0,
		"STATE_UP":          1,
		"STATE_DOWN":        2,
	}
)

func (x AdminStatus_State) Enum() *AdminStatus_State {
	p := new(AdminStatus_State)
	*p = x
	return p
}

func (x AdminStatus_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AdminStatus_State) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_v2_vm_resource_proto_enumTypes[0].Descriptor()
}

func (AdminStatus_State) Type() protoreflect.EnumType {
	return &file_resource_v2_vm_resource_proto_enumTypes[0]
}

func (x AdminStatus_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AdminStatus_State.Descriptor instead.
func (AdminStatus_State) EnumDescriptor() ([]byte, []int) {
	return file_resource_v2_vm_resource_proto_rawDescGZIP(), []int{1, 0}
}

type VirtualMachineStatus_State int32

const (
	// indicates that the state of the virtual machine could not be obtained,
	// typically due to an error in communicating with the host on which it's running.
	VirtualMachineStatus_STATE_UNSPECIFIED VirtualMachineStatus_State = 0
	// indicates that the virtual machine is currently stopped and isn't expected to start.
	VirtualMachineStatus_STATE_STOPPED VirtualMachineStatus_State = 1
	// indicates that cluster resources associated with the virtual machine (e.g., DataVolumes)
	// are being provisioned and prepared.
	VirtualMachineStatus_STATE_PROVISIONING VirtualMachineStatus_State = 2
	// indicates that the virtual machine is being prepared for running.
	VirtualMachineStatus_STATE_STARTING VirtualMachineStatus_State = 3
	// indicates that the virtual machine is running.
	VirtualMachineStatus_STATE_RUNNING VirtualMachineStatus_State = 4
	// indicates that the virtual machine is paused.
	VirtualMachineStatus_STATE_PAUSED VirtualMachineStatus_State = 5
	// indicates that the virtual machine is in the process of being stopped.
	VirtualMachineStatus_STATE_STOPPING VirtualMachineStatus_State = 6
	// indicates that the virtual machine is in the process of deletion,
	// as well as its associated resources (VirtualMachineInstance, DataVolumes, â€¦).
	VirtualMachineStatus_STATE_TERMINATING VirtualMachineStatus_State = 7
	// indicates that the virtual machine is currently in a crash loop waiting to be retried.
	VirtualMachineStatus_STATE_CRASH_LOOP_BACKOFF VirtualMachineStatus_State = 8
	// indicates that the virtual machine is in the process of being migrated to another host.
	VirtualMachineStatus_STATE_MIGRATING VirtualMachineStatus_State = 9
	// indicates that an error has occurred while scheduling the virtual machine,
	//  e.g. due to unsatisfiable resource requests or unsatisfiable scheduling constraints.
	VirtualMachineStatus_STATE_ERROR_UNSCHEDULABLE VirtualMachineStatus_State = 10
	// indicates that an error has occurred while pulling an image for
	// a containerDisk VM volume.
	VirtualMachineStatus_STATE_ERROR_IMAGE_PULL VirtualMachineStatus_State = 11
	// indicates that an error has occurred while pulling an image for
	// a containerDisk VM volume, and that kubelet is backing off before retrying.
	VirtualMachineStatus_STATE_ERROR_IMAGE_PULL_BACKOFF VirtualMachineStatus_State = 12
	// indicates that the virtual machine references a PVC volume which doesn't exist.
	VirtualMachineStatus_STATE_ERROR_PVC_NOT_FOUND VirtualMachineStatus_State = 13
	// indicates that an error has been reported by one of the DataVolumes
	//	referenced by the virtual machines.
	VirtualMachineStatus_STATE_ERROR_DATA_VOLUME VirtualMachineStatus_State = 14
	// indicates that some PersistentVolumeClaims backing
	// the virtual machine volume are still not bound.
	VirtualMachineStatus_STATE_WAITING_FOR_VOLUME_BINDING VirtualMachineStatus_State = 15
)

// Enum value maps for VirtualMachineStatus_State.
var (
	VirtualMachineStatus_State_name = map[int32]string{
		0:  "STATE_UNSPECIFIED",
		1:  "STATE_STOPPED",
		2:  "STATE_PROVISIONING",
		3:  "STATE_STARTING",
		4:  "STATE_RUNNING",
		5:  "STATE_PAUSED",
		6:  "STATE_STOPPING",
		7:  "STATE_TERMINATING",
		8:  "STATE_CRASH_LOOP_BACKOFF",
		9:  "STATE_MIGRATING",
		10: "STATE_ERROR_UNSCHEDULABLE",
		11: "STATE_ERROR_IMAGE_PULL",
		12: "STATE_ERROR_IMAGE_PULL_BACKOFF",
		13: "STATE_ERROR_PVC_NOT_FOUND",
		14: "STATE_ERROR_DATA_VOLUME",
		15: "STATE_WAITING_FOR_VOLUME_BINDING",
	}
	VirtualMachineStatus_State_value = map[string]int32{
		"STATE_UNSPECIFIED":                0,
		"STATE_STOPPED":                    1,
		"STATE_PROVISIONING":               2,
		"STATE_STARTING":                   3,
		"STATE_RUNNING":                    4,
		"STATE_PAUSED":                     5,
		"STATE_STOPPING":                   6,
		"STATE_TERMINATING":                7,
		"STATE_CRASH_LOOP_BACKOFF":         8,
		"STATE_MIGRATING":                  9,
		"STATE_ERROR_UNSCHEDULABLE":        10,
		"STATE_ERROR_IMAGE_PULL":           11,
		"STATE_ERROR_IMAGE_PULL_BACKOFF":   12,
		"STATE_ERROR_PVC_NOT_FOUND":        13,
		"STATE_ERROR_DATA_VOLUME":          14,
		"STATE_WAITING_FOR_VOLUME_BINDING": 15,
	}
)

func (x VirtualMachineStatus_State) Enum() *VirtualMachineStatus_State {
	p := new(VirtualMachineStatus_State)
	*p = x
	return p
}

func (x VirtualMachineStatus_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VirtualMachineStatus_State) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_v2_vm_resource_proto_enumTypes[1].Descriptor()
}

func (VirtualMachineStatus_State) Type() protoreflect.EnumType {
	return &file_resource_v2_vm_resource_proto_enumTypes[1]
}

func (x VirtualMachineStatus_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VirtualMachineStatus_State.Descriptor instead.
func (VirtualMachineStatus_State) EnumDescriptor() ([]byte, []int) {
	return file_resource_v2_vm_resource_proto_rawDescGZIP(), []int{2, 0}
}

// Represents a virtual machine.
type VirtualMachine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The virtual machine current status
	Status *VirtualMachineStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// The admin status whether the associated VirtualMachineInstance is created or not
	AdminStatus *AdminStatus `protobuf:"bytes,2,opt,name=admin_status,json=adminStatus,proto3" json:"admin_status,omitempty"`
}

func (x *VirtualMachine) Reset() {
	*x = VirtualMachine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_v2_vm_resource_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualMachine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachine) ProtoMessage() {}

func (x *VirtualMachine) ProtoReflect() protoreflect.Message {
	mi := &file_resource_v2_vm_resource_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualMachine.ProtoReflect.Descriptor instead.
func (*VirtualMachine) Descriptor() ([]byte, []int) {
	return file_resource_v2_vm_resource_proto_rawDescGZIP(), []int{0}
}

func (x *VirtualMachine) GetStatus() *VirtualMachineStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *VirtualMachine) GetAdminStatus() *AdminStatus {
	if x != nil {
		return x.AdminStatus
	}
	return nil
}

// Represents the associated VirtualMachineInstance's state, either created (up state) or not (down state).
type AdminStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// State information
	State AdminStatus_State `protobuf:"varint,1,opt,name=state,proto3,enum=resource.v2.AdminStatus_State" json:"state,omitempty"`
}

func (x *AdminStatus) Reset() {
	*x = AdminStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_v2_vm_resource_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminStatus) ProtoMessage() {}

func (x *AdminStatus) ProtoReflect() protoreflect.Message {
	mi := &file_resource_v2_vm_resource_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminStatus.ProtoReflect.Descriptor instead.
func (*AdminStatus) Descriptor() ([]byte, []int) {
	return file_resource_v2_vm_resource_proto_rawDescGZIP(), []int{1}
}

func (x *AdminStatus) GetState() AdminStatus_State {
	if x != nil {
		return x.State
	}
	return AdminStatus_STATE_UNSPECIFIED
}

// Status of a virtual machine.
type VirtualMachineStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Virtual machine state
	State VirtualMachineStatus_State `protobuf:"varint,1,opt,name=state,proto3,enum=resource.v2.VirtualMachineStatus_State" json:"state,omitempty"`
}

func (x *VirtualMachineStatus) Reset() {
	*x = VirtualMachineStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_v2_vm_resource_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualMachineStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachineStatus) ProtoMessage() {}

func (x *VirtualMachineStatus) ProtoReflect() protoreflect.Message {
	mi := &file_resource_v2_vm_resource_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualMachineStatus.ProtoReflect.Descriptor instead.
func (*VirtualMachineStatus) Descriptor() ([]byte, []int) {
	return file_resource_v2_vm_resource_proto_rawDescGZIP(), []int{2}
}

func (x *VirtualMachineStatus) GetState() VirtualMachineStatus_State {
	if x != nil {
		return x.State
	}
	return VirtualMachineStatus_STATE_UNSPECIFIED
}

var File_resource_v2_vm_resource_proto protoreflect.FileDescriptor

var file_resource_v2_vm_resource_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x76, 0x32, 0x2f, 0x76, 0x6d,
	0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x76, 0x32, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62,
	0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x92, 0x01,
	0x0a, 0x0e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x12, 0x3e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x56,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x40, 0x0a, 0x0c, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x0b, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x34, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1e, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x76, 0x32, 0x2e,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x3c, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x55, 0x50, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x44, 0x4f, 0x57, 0x4e, 0x10, 0x02, 0x22, 0xf9, 0x03, 0x0a, 0x14, 0x56, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x3d, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xa1,
	0x03, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x11, 0x0a, 0x0d, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x50, 0x45, 0x44,
	0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x56,
	0x49, 0x53, 0x49, 0x4f, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x11,
	0x0a, 0x0d, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10,
	0x04, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x41, 0x55, 0x53, 0x45,
	0x44, 0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x4f,
	0x50, 0x50, 0x49, 0x4e, 0x47, 0x10, 0x06, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x54, 0x45, 0x52, 0x4d, 0x49, 0x4e, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x07, 0x12, 0x1c,
	0x0a, 0x18, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x52, 0x41, 0x53, 0x48, 0x5f, 0x4c, 0x4f,
	0x4f, 0x50, 0x5f, 0x42, 0x41, 0x43, 0x4b, 0x4f, 0x46, 0x46, 0x10, 0x08, 0x12, 0x13, 0x0a, 0x0f,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4d, 0x49, 0x47, 0x52, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x10,
	0x09, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x5f, 0x55, 0x4e, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x0a,
	0x12, 0x1a, 0x0a, 0x16, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f,
	0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x50, 0x55, 0x4c, 0x4c, 0x10, 0x0b, 0x12, 0x22, 0x0a, 0x1e,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x49, 0x4d, 0x41, 0x47,
	0x45, 0x5f, 0x50, 0x55, 0x4c, 0x4c, 0x5f, 0x42, 0x41, 0x43, 0x4b, 0x4f, 0x46, 0x46, 0x10, 0x0c,
	0x12, 0x1d, 0x0a, 0x19, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f,
	0x50, 0x56, 0x43, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x0d, 0x12,
	0x1b, 0x0a, 0x17, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x44,
	0x41, 0x54, 0x41, 0x5f, 0x56, 0x4f, 0x4c, 0x55, 0x4d, 0x45, 0x10, 0x0e, 0x12, 0x24, 0x0a, 0x20,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x46, 0x4f,
	0x52, 0x5f, 0x56, 0x4f, 0x4c, 0x55, 0x4d, 0x45, 0x5f, 0x42, 0x49, 0x4e, 0x44, 0x49, 0x4e, 0x47,
	0x10, 0x0f, 0x42, 0xd9, 0x01, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x76, 0x32, 0x42, 0x0f, 0x56, 0x6d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x68, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x2d, 0x65, 0x64, 0x67, 0x65, 0x2d,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x61, 0x70, 0x70, 0x2d, 0x6f, 0x72, 0x63,
	0x68, 0x2d, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x61, 0x70, 0x70,
	0x2d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x62, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x76, 0x32, 0x3b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x76, 0x32, 0xa2, 0x02, 0x03, 0x52, 0x58, 0x58, 0xaa, 0x02, 0x0b, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x56, 0x32, 0xca, 0x02, 0x0b, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5c, 0x56, 0x32, 0xe2, 0x02, 0x17, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5c, 0x56, 0x32, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x0c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x3a, 0x3a, 0x56, 0x32, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_resource_v2_vm_resource_proto_rawDescOnce sync.Once
	file_resource_v2_vm_resource_proto_rawDescData = file_resource_v2_vm_resource_proto_rawDesc
)

func file_resource_v2_vm_resource_proto_rawDescGZIP() []byte {
	file_resource_v2_vm_resource_proto_rawDescOnce.Do(func() {
		file_resource_v2_vm_resource_proto_rawDescData = protoimpl.X.CompressGZIP(file_resource_v2_vm_resource_proto_rawDescData)
	})
	return file_resource_v2_vm_resource_proto_rawDescData
}

var file_resource_v2_vm_resource_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_resource_v2_vm_resource_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_resource_v2_vm_resource_proto_goTypes = []interface{}{
	(AdminStatus_State)(0),          // 0: resource.v2.AdminStatus.State
	(VirtualMachineStatus_State)(0), // 1: resource.v2.VirtualMachineStatus.State
	(*VirtualMachine)(nil),          // 2: resource.v2.VirtualMachine
	(*AdminStatus)(nil),             // 3: resource.v2.AdminStatus
	(*VirtualMachineStatus)(nil),    // 4: resource.v2.VirtualMachineStatus
}
var file_resource_v2_vm_resource_proto_depIdxs = []int32{
	4, // 0: resource.v2.VirtualMachine.status:type_name -> resource.v2.VirtualMachineStatus
	3, // 1: resource.v2.VirtualMachine.admin_status:type_name -> resource.v2.AdminStatus
	0, // 2: resource.v2.AdminStatus.state:type_name -> resource.v2.AdminStatus.State
	1, // 3: resource.v2.VirtualMachineStatus.state:type_name -> resource.v2.VirtualMachineStatus.State
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_resource_v2_vm_resource_proto_init() }
func file_resource_v2_vm_resource_proto_init() {
	if File_resource_v2_vm_resource_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_resource_v2_vm_resource_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualMachine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_v2_vm_resource_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_v2_vm_resource_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualMachineStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_resource_v2_vm_resource_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_resource_v2_vm_resource_proto_goTypes,
		DependencyIndexes: file_resource_v2_vm_resource_proto_depIdxs,
		EnumInfos:         file_resource_v2_vm_resource_proto_enumTypes,
		MessageInfos:      file_resource_v2_vm_resource_proto_msgTypes,
	}.Build()
	File_resource_v2_vm_resource_proto = out.File
	file_resource_v2_vm_resource_proto_rawDesc = nil
	file_resource_v2_vm_resource_proto_goTypes = nil
	file_resource_v2_vm_resource_proto_depIdxs = nil
}
