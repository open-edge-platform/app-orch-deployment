openapi: 3.1.0
info:
  title: resource.v2
paths: {}
components:
  schemas:
    google.protobuf.Timestamp:
      type: string
      examples:
        - "2023-01-15T01:30:15.01Z"
        - "2024-12-25T12:00:00Z"
      format: date-time
      description: |-
        A Timestamp represents a point in time independent of any time zone or local
         calendar, encoded as a count of seconds and fractions of seconds at
         nanosecond resolution. The count is relative to an epoch at UTC midnight on
         January 1, 1970, in the proleptic Gregorian calendar which extends the
         Gregorian calendar backwards to year one.

         All minutes are 60 seconds long. Leap seconds are "smeared" so that no leap
         second table is needed for interpretation, using a [24-hour linear
         smear](https://developers.google.com/time/smear).

         The range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By
         restricting to that range, we ensure that we can convert to and from [RFC
         3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.

         # Examples

         Example 1: Compute Timestamp from POSIX `time()`.

             Timestamp timestamp;
             timestamp.set_seconds(time(NULL));
             timestamp.set_nanos(0);

         Example 2: Compute Timestamp from POSIX `gettimeofday()`.

             struct timeval tv;
             gettimeofday(&tv, NULL);

             Timestamp timestamp;
             timestamp.set_seconds(tv.tv_sec);
             timestamp.set_nanos(tv.tv_usec * 1000);

         Example 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.

             FILETIME ft;
             GetSystemTimeAsFileTime(&ft);
             UINT64 ticks = (((UINT64)ft.dwHighDateTime) << 32) | ft.dwLowDateTime;

             // A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z
             // is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.
             Timestamp timestamp;
             timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));
             timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));

         Example 4: Compute Timestamp from Java `System.currentTimeMillis()`.

             long millis = System.currentTimeMillis();

             Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)
                 .setNanos((int) ((millis % 1000) * 1000000)).build();

         Example 5: Compute Timestamp from Java `Instant.now()`.

             Instant now = Instant.now();

             Timestamp timestamp =
                 Timestamp.newBuilder().setSeconds(now.getEpochSecond())
                     .setNanos(now.getNano()).build();

         Example 6: Compute Timestamp from current time in Python.

             timestamp = Timestamp()
             timestamp.GetCurrentTime()

         # JSON Mapping

         In JSON format, the Timestamp type is encoded as a string in the
         [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format. That is, the
         format is "{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z"
         where {year} is always expressed using four digits while {month}, {day},
         {hour}, {min}, and {sec} are zero-padded to two digits each. The fractional
         seconds, which can go up to 9 digits (i.e. up to 1 nanosecond resolution),
         are optional. The "Z" suffix indicates the timezone ("UTC"); the timezone
         is required. A proto3 JSON serializer should always use UTC (as indicated by
         "Z") when printing the Timestamp type and a proto3 JSON parser should be
         able to accept both UTC and other timezones (as indicated by an offset).

         For example, "2017-01-15T01:30:15.01Z" encodes 15.01 seconds past
         01:30 UTC on January 15, 2017.

         In JavaScript, one can convert a Date object to this format using the
         standard
         [toISOString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString)
         method. In Python, a standard `datetime.datetime` object can be converted
         to this format using
         [`strftime`](https://docs.python.org/2/library/time.html#time.strftime) with
         the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in Java, one can use
         the Joda Time's [`ISODateTimeFormat.dateTime()`](
         http://joda-time.sourceforge.net/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime()
         ) to obtain a formatter capable of generating timestamps in this format.
    resource.v2.AdminStatus:
      type: object
      properties:
        state:
          title: state
          description: State information
          $ref: '#/components/schemas/resource.v2.AdminStatus.State'
      title: AdminStatus
      additionalProperties: false
      description: Represents the associated VirtualMachineInstance's state, either created (up state) or not (down state).
    resource.v2.AdminStatus.State:
      type: string
      title: State
      enum:
        - STATE_UNSPECIFIED
        - STATE_UP
        - STATE_DOWN
    resource.v2.AppWorkload:
      type: object
      allOf:
        - properties:
            type:
              title: type
              description: Application workload type, e.g. virtual machine and pod.
              $ref: '#/components/schemas/resource.v2.AppWorkload.Type'
            id:
              type: string
              title: id
              format: uuid
              description: Workload UUID
            name:
              type: string
              title: name
              maxLength: 253
              minLength: 1
              pattern: ^[a-z0-9]([-a-z0-9-]*[a-z0-9])?$
              description: Workload name
            namespace:
              type: string
              title: namespace
              description: Namespace where the workload is created.
              readOnly: true
            createTime:
              title: create_time
              description: The time when the workload is created.
              readOnly: true
              $ref: '#/components/schemas/google.protobuf.Timestamp'
            workloadReady:
              type: boolean
              title: workload_ready
              description: Ready status to determines if a workload is fully functional or not.
              readOnly: true
        - oneOf:
            - properties:
                pod:
                  title: pod
                  $ref: '#/components/schemas/resource.v2.Pod'
              title: pod
              required:
                - pod
            - properties:
                virtualMachine:
                  title: virtual_machine
                  $ref: '#/components/schemas/resource.v2.VirtualMachine'
              title: virtual_machine
              required:
                - virtualMachine
      title: AppWorkload
      required:
        - id
        - name
      additionalProperties: false
      description: |-
        AppWorkload a high-level abstraction for representing different types of application workloads.
         The application workloads can be virtual machine-based or container-based.
    resource.v2.AppWorkload.Type:
      type: string
      title: Type
      enum:
        - TYPE_UNSPECIFIED
        - TYPE_VIRTUAL_MACHINE
        - TYPE_POD
    resource.v2.Container:
      type: object
      properties:
        name:
          type: string
          title: name
          maxLength: 63
          minLength: 1
          pattern: ^[a-z0-9]([-a-z0-9-]*[a-z0-9])?$
          description: Container name
        imageName:
          type: string
          title: image_name
          description: image_name container image name
          readOnly: true
        restartCount:
          type: integer
          title: restart_count
          format: int32
          description: Number of times that a container is restarted.
          readOnly: true
        status:
          title: status
          description: status status of a container
          readOnly: true
          $ref: '#/components/schemas/resource.v2.ContainerStatus'
      title: Container
      required:
        - name
      additionalProperties: false
      description: Represents a container resource.
    resource.v2.ContainerStateRunning:
      type: object
      title: ContainerStateRunning
      additionalProperties: false
      description: Running status of a container.
    resource.v2.ContainerStateTerminated:
      type: object
      properties:
        reason:
          type: string
          title: reason
          description: Reason of the termination.
          readOnly: true
        message:
          type: string
          title: message
          description: Message of the termination status.
          readOnly: true
        exitCode:
          type: integer
          title: exit_code
          format: int32
          description: Exit code of the termination status.
          readOnly: true
      title: ContainerStateTerminated
      additionalProperties: false
      description: Termination status of a container.
    resource.v2.ContainerStateWaiting:
      type: object
      properties:
        reason:
          type: string
          title: reason
          description: Reason of the waiting status.
          readOnly: true
        message:
          type: string
          title: message
          description: Message of the waiting status.
          readOnly: true
      title: ContainerStateWaiting
      additionalProperties: false
      description: Waiting status of a container including the reason and message.
    resource.v2.ContainerStatus:
      type: object
      oneOf:
        - properties:
            containerStateRunning:
              title: container_state_running
              $ref: '#/components/schemas/resource.v2.ContainerStateRunning'
          title: container_state_running
          required:
            - containerStateRunning
        - properties:
            containerStateTerminated:
              title: container_state_terminated
              $ref: '#/components/schemas/resource.v2.ContainerStateTerminated'
          title: container_state_terminated
          required:
            - containerStateTerminated
        - properties:
            containerStateWaiting:
              title: container_state_waiting
              $ref: '#/components/schemas/resource.v2.ContainerStateWaiting'
          title: container_state_waiting
          required:
            - containerStateWaiting
      title: ContainerStatus
      additionalProperties: false
      description: ContainerStatus status of a container
    resource.v2.Pod:
      type: object
      properties:
        containers:
          type: array
          items:
            $ref: '#/components/schemas/resource.v2.Container'
          title: containers
          maxItems: 50
          description: containers list of containers per pod
        status:
          title: status
          description: status pod status
          readOnly: true
          $ref: '#/components/schemas/resource.v2.PodStatus'
      title: Pod
      additionalProperties: false
      description: Represents a pod resource.
    resource.v2.PodStatus:
      type: object
      properties:
        state:
          title: state
          description: State information
          $ref: '#/components/schemas/resource.v2.PodStatus.State'
      title: PodStatus
      additionalProperties: false
      description: The status of the pod during its lifecycle.
    resource.v2.PodStatus.State:
      type: string
      title: State
      enum:
        - STATE_UNSPECIFIED
        - STATE_PENDING
        - STATE_RUNNING
        - STATE_SUCCEEDED
        - STATE_FAILED
    resource.v2.VirtualMachine:
      type: object
      properties:
        status:
          title: status
          description: The virtual machine current status
          readOnly: true
          $ref: '#/components/schemas/resource.v2.VirtualMachineStatus'
        adminStatus:
          title: admin_status
          description: The admin status whether the associated VirtualMachineInstance is created or not
          readOnly: true
          $ref: '#/components/schemas/resource.v2.AdminStatus'
      title: VirtualMachine
      additionalProperties: false
      description: Represents a virtual machine.
    resource.v2.VirtualMachineStatus:
      type: object
      properties:
        state:
          title: state
          description: Virtual machine state
          $ref: '#/components/schemas/resource.v2.VirtualMachineStatus.State'
      title: VirtualMachineStatus
      additionalProperties: false
      description: Status of a virtual machine.
    resource.v2.VirtualMachineStatus.State:
      type: string
      title: State
      enum:
        - STATE_UNSPECIFIED
        - STATE_STOPPED
        - STATE_PROVISIONING
        - STATE_STARTING
        - STATE_RUNNING
        - STATE_PAUSED
        - STATE_STOPPING
        - STATE_TERMINATING
        - STATE_CRASH_LOOP_BACKOFF
        - STATE_MIGRATING
        - STATE_ERROR_UNSCHEDULABLE
        - STATE_ERROR_IMAGE_PULL
        - STATE_ERROR_IMAGE_PULL_BACKOFF
        - STATE_ERROR_PVC_NOT_FOUND
        - STATE_ERROR_DATA_VOLUME
        - STATE_WAITING_FOR_VOLUME_BINDING
security: []
