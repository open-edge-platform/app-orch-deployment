// SPDX-FileCopyrightText: (C) 2024 Intel Corporation
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package deployment.v1;

import "buf/validate/validate.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/open-edge-platform/app-orch-deployment/app-deployment-manager/api/nbi/v2/deployment/v1";

// Deployment defines the specification to deploy a Deployment Package onto a set of clusters.
message Deployment {
  // Deployment name (unique string assigned by Orchestrator).
  string name = 1 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Deployment display name.
  string display_name = 2 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      min_len: 0
      max_len: 40
      pattern: "^([a-zA-Z0-9][\\w\\- \\.\\/_]{0,38}[a-zA-Z0-9]{0,1}|)$"
    }
  ];

  // The deployment package name to deploy from the catalog.
  string app_name = 3 [
    (google.api.field_behavior) = REQUIRED,
    (buf.validate.field).string = {
      min_len: 1
      max_len: 40
      pattern: "^[a-z0-9][a-z0-9-]{0,38}[a-z0-9]{0,1}$"
    }
  ];

  // The version of the deployment package.
  string app_version = 4 [
    (google.api.field_behavior) = REQUIRED,
    (buf.validate.field).string = {
      min_len: 1
      max_len: 20
      pattern: "^[a-z0-9][a-z0-9-.]{0,18}[a-z0-9]{0,1}$"
    }
  ];

  // The selected profile name to be used for the base Helm values of the different applications in the deployment package
  string profile_name = 5 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      min_len: 0
      max_len: 40
      pattern: "^[a-z0-9]*[a-z0-9-]{0,38}[a-z0-9]{0,1}$"
    }
  ];

  // The creation time of the deployment.
  google.protobuf.Timestamp create_time = 6 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The id of the deployment.
  string deploy_id = 7 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The Override values can be used to override any of the base profile values based on Deployment scenario.
  repeated OverrideValues override_values = 8 [(google.api.field_behavior) = OPTIONAL];

  // Cluster labels on which we want to deploy the application.
  repeated TargetClusters target_clusters = 9 [(google.api.field_behavior) = OPTIONAL];

  // Status has details of the deployment.
  message Status {
    State state = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
    string message = 2 [(google.api.field_behavior) = OUTPUT_ONLY];
    Summary summary = 3 [(google.api.field_behavior) = OUTPUT_ONLY];
  }

  // Status of the deployment.
  Status status = 10 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Application details.
  repeated App apps = 11 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The deployment type for the target cluster deployment can be either auto-scaling or targeted.
  // In Auto-scaling type, the application will be automatically deployed on all the
  // clusters which match the Target cluster label. In Targeted type, the user has to select among pre created
  // clusters to deploy the application.
  string deployment_type = 12 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      min_len: 0
      max_len: 20
      pattern: "^[a-z0-9]*[a-z0-9-]{0,18}[a-z0-9]{0,1}$"
    }
  ];

  // network_name is the name of the interconnect network that deployment be part of
  string network_name = 13 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      min_len: 0
      max_len: 40
      pattern: "^[a-z0-9]*[a-z0-9-]{0,18}[a-z0-9]{0,1}$"
    }
  ];

  repeated ServiceExport service_exports = 14 [(google.api.field_behavior) = OPTIONAL];

  // Cluster labels/clusterID on which we want to deploy all the applications of the
  // deployment package
  TargetClusters all_app_target_clusters = 15 [(google.api.field_behavior) = OPTIONAL];
}

message ServiceExport {
  string app_name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (buf.validate.field).string = {
      min_len: 1
      max_len: 40
      pattern: "^[a-z0-9][a-z0-9-]{0,38}[a-z0-9]{0,1}$"
    }
  ];

  bool enabled = 2;
}

// The Override values can be used to override any of the base helm values of
// applications based on Deployment scenario.
message OverrideValues {
  // deployment package name to use when overriding values.
  string app_name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (buf.validate.field).string = {
      min_len: 1
      max_len: 40
      pattern: "^[a-z0-9][a-z0-9-]{0,38}[a-z0-9]{0,1}$"
    }
  ];

  // The namespace to deploy the app onto, default namespace is default.
  string target_namespace = 2 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      min_len: 0
      max_len: 63
      pattern: "(^$)|^[a-z0-9]([-a-z0-9]{0,61}[a-z0-9])?$"
    }
  ];

  // The YAML representing Helm overrides
  google.protobuf.Struct values = 3 [(google.api.field_behavior) = OPTIONAL];
}

// Set target clusters based on labels.
message TargetClusters {
  // The targeted deployment package name.
  string app_name = 1 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      min_len: 0
      max_len: 40
      pattern: "(^$)|^[a-z0-9][a-z0-9-]{0,38}[a-z0-9]{0,1}$"
    }
  ];

  // Cluster labels to match the target cluster when auto-scaling deployment.
  map<string, string> labels = 2 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).map = {
      keys: {
        string: {
          min_len: 1
          max_len: 40
          pattern: "(^$)|^[a-z0-9]([-_.=,a-z0-9/]{0,38}[a-z0-9])?$"
        }
      }
      values: {
        string: {
          min_len: 1
          max_len: 40
          pattern: "(^$)|^[a-z0-9]([-_.=,a-z0-9/]{0,38}[a-z0-9])?$"
        }
      }
    }
  ];

  // Cluster id to match the target cluster when targeted deployment.
  string cluster_id = 3 [(google.api.field_behavior) = OPTIONAL];
}

// State are the different states a deployment/cluster/app can be in.
enum State {
  UNKNOWN = 0;
  RUNNING = 1;
  DOWN = 2;
  INTERNAL_ERROR = 3;
  DEPLOYING = 4;
  UPDATING = 5;
  TERMINATING = 6;
  ERROR = 7;
  NO_TARGET_CLUSTERS = 8;
}

// Count of status.
message Summary {
  // Total count of apps/clusters in the deployment, value from owned GitRepo objects.
  int32 total = 1 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Number of running apps/clusters in the deployment, value from owned GitRepo objects.
  int32 running = 2 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Number of down apps/clusters in the deployment.
  int32 down = 3 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Type of thing that we're counting, ie clusters, apps.
  string type = 4 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Unknown status to indicate cluster not reachable.
  int32 unknown = 5 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// Details of application.
message App {
  // The deployment package app name.
  string name = 1 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Id of the app (same as Fleet bundle name) which is,
  // concatenated from name and deploy_id (uid which comes from k8s).
  string id = 2 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Status has details of the app.
  Deployment.Status status = 3 [(google.api.field_behavior) = OUTPUT_ONLY];
}

message DeploymentInstancesCluster {
  // Deployment CR UID.
  string deployment_uid = 1 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Deployment name (unique string assigned by Orchestrator).
  string deployment_name = 2 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Deployment display name.
  string deployment_display_name = 3 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      min_len: 0
      max_len: 40
      pattern: "^([a-zA-Z0-9][\\w\\- \\.\\/_]{0,38}[a-zA-Z0-9]{0,1}|)$"
    }
  ];

  // Status has details of the cluster.
  Deployment.Status status = 4 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Apps has per-app details.
  repeated App apps = 5 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// Details of cluster.
message Cluster {
  // Name is the display name which user provides and ECM creates and assigns clustername label to Fleet cluster object.
  string name = 1 [(google.api.field_behavior) = OUTPUT_ONLY];

  // ID is the cluster id which ECM generates and assigns to the Rancher cluster name.
  string id = 2 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Status has details of the cluster.
  Deployment.Status status = 3 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Apps has per-app details.
  repeated App apps = 4 [(google.api.field_behavior) = OUTPUT_ONLY];
}
