// SPDX-FileCopyrightText: (C) 2024 Intel Corporation
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package deployment.v1;

import "buf/validate/validate.proto";
import "deployment/v1/resources.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/empty.proto";

option go_package = "github.com/open-edge-platform/app-orch-deployment/app-deployment-manager/api/nbi/v2/deployment/v1";

// DeploymentService provides API operations for catalogs and applications.
service DeploymentService {
  // === Deployment ===

  // Gets a list of all deployment objects.
  rpc ListDeployments(ListDeploymentsRequest) returns (ListDeploymentsResponse) {
    option (google.api.http) = {get: "/deployment.orchestrator.apis/v1/deployments"};
  }

  rpc ListDeploymentsPerCluster(ListDeploymentsPerClusterRequest) returns (ListDeploymentsPerClusterResponse) {
    option (google.api.http) = {get: "/deployment.orchestrator.apis/v1/deployments/clusters/{cluster_id}"};
  }

  // Creates a deployment object.
  rpc CreateDeployment(CreateDeploymentRequest) returns (CreateDeploymentResponse) {
    option (google.api.http) = {
      post: "/deployment.orchestrator.apis/v1/deployments"
      body: "deployment"
    };
  }

  // Gets a deployment object.
  rpc GetDeployment(GetDeploymentRequest) returns (GetDeploymentResponse) {
    option (google.api.http) = {get: "/deployment.orchestrator.apis/v1/deployments/{depl_id}"};
  }

  // Updates a deployment object.
  rpc UpdateDeployment(UpdateDeploymentRequest) returns (UpdateDeploymentResponse) {
    option (google.api.http) = {
      put: "/deployment.orchestrator.apis/v1/deployments/{depl_id}"
      body: "deployment"
    };
  }

  // Deletes a deployment object.
  rpc DeleteDeployment(DeleteDeploymentRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {delete: "/deployment.orchestrator.apis/v1/deployments/{depl_id}"};
  }

  // === Summary ===

  // Gets all deployment clusters count status.
  rpc GetDeploymentsStatus(GetDeploymentsStatusRequest) returns (GetDeploymentsStatusResponse) {
    option (google.api.http) = {get: "/deployment.orchestrator.apis/v1/summary/deployments_status"};
  }

  // Gets a list of all deployment cluster objects.
  rpc ListDeploymentClusters(ListDeploymentClustersRequest) returns (ListDeploymentClustersResponse) {
    option (google.api.http) = {get: "/deployment.orchestrator.apis/v1/deployments/{depl_id}/clusters"};
  }

  rpc GetAppNamespace(GetAppNamespaceRequest) returns (GetAppNamespaceResponse) {}
} // End: DeploymentService

// === Deployment ===

// Request message for the CreateDeployment method.
message CreateDeploymentRequest {
  // Required. Initial values for the deployment.
  deployment.v1.Deployment deployment = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for the CreateDeployment method.
message CreateDeploymentResponse {
  // Returns the new Deployment Id.
  string deployment_id = 1 [
    (google.api.field_behavior) = REQUIRED,
    (buf.validate.field).string = {
      min_len: 1
      max_len: 40
    }
  ];
}

// Request message for the ListDeployments method.
message ListDeploymentsRequest {
  // Optional. A string array that filters cluster labels to be
  // displayed ie color=blue,customer=intel-corp. Labels separated by a comma.
  repeated string labels = 1 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).repeated = {
      min_items: 0
      max_items: 20
      items: {
        string: {
          min_len: 1
          max_len: 200
          pattern: "(^$)|^[a-z0-9]([-_.=,a-z0-9]{0,198}[a-z0-9])?$"
        }
      }
    }
  ];

  // Optional. Select field and order based on which Deployment list will be sorted.
  string order_by = 2 [(google.api.field_behavior) = OPTIONAL];

  // Optional. Selection criteria to list Deployments.
  string filter = 3 [(google.api.field_behavior) = OPTIONAL];

  // Optional. Select count of Deployment to be listed per page.
  int32 page_size = 4 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).int32 = {
      gte: 0
      lte: 500
    }
  ];

  // Optional. Offset is used to select the correct page from which Deployment list will be displayed.
  // (E.g If there are 10 Deployments, page size is 2 and offset is set as 4, then the response will display Deployment 5 and 6.)
  int32 offset = 5 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).int32 = {gte: 0}
  ];
}

// Response message for the ListDeployments method.
message ListDeploymentsResponse {
  // A list of Deployment Objects.
  repeated deployment.v1.Deployment deployments = 1 [
    (google.api.field_behavior) = REQUIRED,
    (buf.validate.field).repeated = {max_items: 500}
  ];

  int32 total_elements = 2 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the ListDeploymentsPerCluster method.
message ListDeploymentsPerClusterRequest {
  string cluster_id = 1 [
    (google.api.field_behavior) = REQUIRED,
    (buf.validate.field).string = {
      min_len: 1
      max_len: 40
      pattern: "^[a-z0-9][a-z0-9-]{0,38}[a-z0-9]{0,1}$"
    }
  ];
  // Optional. A string array that filters cluster labels to be
  // displayed ie color=blue,customer=intel-corp. Labels separated by a comma.
  repeated string labels = 2 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).repeated = {
      min_items: 0
      max_items: 20
      items: {
        string: {
          min_len: 1
          max_len: 200
          pattern: "(^$)|^[a-z0-9]([-_.=,a-z0-9]{0,198}[a-z0-9])?$"
        }
      }
    }
  ];

  // Optional. Select field and order based on which Deployment list will be sorted.
  string order_by = 3 [(google.api.field_behavior) = OPTIONAL];

  // Optional. Selection criteria to list Deployments.
  string filter = 4 [(google.api.field_behavior) = OPTIONAL];

  // Optional. Select count of Deployment to be listed per page.
  int32 page_size = 5 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).int32 = {
      gte: 0
      lte: 500
    }
  ];

  // Optional. Offset is used to select the correct page from which Deployment list will be displayed.
  // (E.g If there are 10 Deployments, page size is 2 and offset is set as 4, then the response will display Deployment 5 and 6.)
  int32 offset = 6 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).int32 = {gte: 0}
  ];
}

// Response message for the ListDeploymentsPerCluster method.
message ListDeploymentsPerClusterResponse {
  // A list of Deployment Instance Cluster Objects.
  repeated deployment.v1.DeploymentInstancesCluster deployment_instances_cluster = 1 [
    (google.api.field_behavior) = REQUIRED,
    (buf.validate.field).repeated = {max_items: 500}
  ];

  int32 total_elements = 2 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the GetDeployment method.
message GetDeploymentRequest {
  // Required. The id of the deployment to get.
  string depl_id = 1 [
    (google.api.field_behavior) = REQUIRED,
    (buf.validate.field).string = {
      min_len: 1
      max_len: 40
      pattern: "^[a-z0-9][a-z0-9-]{0,38}[a-z0-9]{0,1}$"
    }
  ];
}

// Response message for the GetDeployment method.
message GetDeploymentResponse {
  // The Deployment Object requested.
  deployment.v1.Deployment deployment = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the UpdateDeployment method.
message UpdateDeploymentRequest {
  // Required. The new updated Deployment Object.
  deployment.v1.Deployment deployment = 1 [(google.api.field_behavior) = REQUIRED];

  // Required. The id of the deployment to update.
  string depl_id = 2 [
    (google.api.field_behavior) = REQUIRED,
    (buf.validate.field).string = {
      min_len: 1
      max_len: 40
      pattern: "^[a-z0-9][a-z0-9-]{0,38}[a-z0-9]{0,1}$"
    }
  ];
}

// Response message for the UpdateDeployment method.
message UpdateDeploymentResponse {
  // The Deployment Object requested.
  deployment.v1.Deployment deployment = 1 [(google.api.field_behavior) = REQUIRED];
}

// Different delete types to handle parent and child
// lists, for dependency support. Available options: PARENT_ONLY, ALL.
enum DeleteType {
  PARENT_ONLY = 0;
  ALL = 1;
}

// Request message for the DeleteDeployment method.
message DeleteDeploymentRequest {
  // Required. The id of the deployment to delete.
  string depl_id = 1 [
    (google.api.field_behavior) = REQUIRED,
    (buf.validate.field).string = {
      min_len: 1
      max_len: 40
      pattern: "^[a-z0-9][a-z0-9-]{0,38}[a-z0-9]{0,1}$"
    }
  ];

  // Required. Different delete types to handle parent and child
  // lists, for dependency support. Available options: PARENT_ONLY, ALL.
  DeleteType delete_type = 2 [(google.api.field_behavior) = REQUIRED];
}

// === Summary ===

// Request message for the GetDeploymentsStatus method.
message GetDeploymentsStatusRequest {
  // Optional. A string array that filters cluster labels to be
  // displayed ie color=blue,customer=intel-corp. Labels separated by a comma.
  repeated string labels = 1 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).repeated = {
      min_items: 0
      max_items: 20
      items: {
        string: {
          min_len: 1
          max_len: 200
          pattern: "(^$)|^[a-z0-9]([-_.=,a-z0-9]{0,198}[a-z0-9])?$"
        }
      }
    }
  ];
}

// Response message for the GetDeploymentsStatus method.
message GetDeploymentsStatusResponse {
  int32 total = 1 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (buf.validate.field).int32.gte = 0
  ];
  int32 running = 2 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (buf.validate.field).int32.gte = 0
  ];
  int32 down = 3 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (buf.validate.field).int32.gte = 0
  ];
  int32 deploying = 4 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (buf.validate.field).int32.gte = 0
  ];
  int32 updating = 5 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (buf.validate.field).int32.gte = 0
  ];
  int32 terminating = 6 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (buf.validate.field).int32.gte = 0
  ];
  int32 error = 7 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (buf.validate.field).int32.gte = 0
  ];
  int32 unknown = 8 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (buf.validate.field).int32.gte = 0
  ];
}

// Request message for the GetappNamespace method.
message GetAppNamespaceRequest {
  string app_id = 1 [
    (google.api.field_behavior) = REQUIRED,
    (buf.validate.field).string = {
      min_len: 1
      max_len: 80
      pattern: "^[a-z0-9][a-z0-9-]{0,78}[a-z0-9]{0,1}$"
    }
  ];
}

// Response message for the GetappNamespace method.
message GetAppNamespaceResponse {
  string namespace = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request message for ListDeploymentClusters method.
message ListDeploymentClustersRequest {
  // Required. The id of the deployment to get.
  string depl_id = 1 [
    (google.api.field_behavior) = REQUIRED,
    (buf.validate.field).string = {
      min_len: 1
      max_len: 40
      pattern: "^[a-z0-9][a-z0-9-]{0,38}[a-z0-9]{0,1}$"
    }
  ];

  // Optional. Select field and order based on which Deployment cluster list will be sorted.
  string order_by = 2 [(google.api.field_behavior) = OPTIONAL];

  // Optional. Selection criteria to list Deployment clusters.
  string filter = 3 [(google.api.field_behavior) = OPTIONAL];

  // Optional. Select count of Deployment clusters to be listed per page.
  int32 page_size = 4 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).int32 = {
      gte: 0
      lte: 500
    }
  ];

  // Optional. Offset is used to select the correct page from which Deployment clusters list will be displayed.
  // (E.g If there are 10 Deployment clusters, page size is 2 and offset is set as 4, then the response will display Deployment clusters 5 and 6.)
  int32 offset = 5 [(google.api.field_behavior) = OPTIONAL];
}

// Response message for ListDeploymentClusters method.
message ListDeploymentClustersResponse {
  repeated deployment.v1.Cluster clusters = 1 [
    (google.api.field_behavior) = REQUIRED,
    (buf.validate.field).repeated = {max_items: 500}
  ];

  int32 total_elements = 2 [(google.api.field_behavior) = REQUIRED];
}
