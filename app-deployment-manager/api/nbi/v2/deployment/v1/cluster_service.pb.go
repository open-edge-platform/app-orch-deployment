// SPDX-FileCopyrightText: (C) 2024 Intel Corporation
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: deployment/v1/cluster_service.proto

package deploymentv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for Get KubeConfig method
type GetKubeConfigRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The cluster id for the kubeconfig.
	ClusterId     string `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetKubeConfigRequest) Reset() {
	*x = GetKubeConfigRequest{}
	mi := &file_deployment_v1_cluster_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetKubeConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKubeConfigRequest) ProtoMessage() {}

func (x *GetKubeConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deployment_v1_cluster_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKubeConfigRequest.ProtoReflect.Descriptor instead.
func (*GetKubeConfigRequest) Descriptor() ([]byte, []int) {
	return file_deployment_v1_cluster_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetKubeConfigRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

// Response message for Get KubeConfig method
type GetKubeConfigResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	KubeConfigInfo *KubeConfigInfo        `protobuf:"bytes,1,opt,name=kube_config_info,json=kubeConfigInfo,proto3" json:"kube_config_info,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetKubeConfigResponse) Reset() {
	*x = GetKubeConfigResponse{}
	mi := &file_deployment_v1_cluster_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetKubeConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKubeConfigResponse) ProtoMessage() {}

func (x *GetKubeConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_deployment_v1_cluster_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKubeConfigResponse.ProtoReflect.Descriptor instead.
func (*GetKubeConfigResponse) Descriptor() ([]byte, []int) {
	return file_deployment_v1_cluster_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetKubeConfigResponse) GetKubeConfigInfo() *KubeConfigInfo {
	if x != nil {
		return x.KubeConfigInfo
	}
	return nil
}

type KubeConfigInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	KubeConfig    []byte                 `protobuf:"bytes,1,opt,name=kube_config,json=kubeConfig,proto3" json:"kube_config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KubeConfigInfo) Reset() {
	*x = KubeConfigInfo{}
	mi := &file_deployment_v1_cluster_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KubeConfigInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubeConfigInfo) ProtoMessage() {}

func (x *KubeConfigInfo) ProtoReflect() protoreflect.Message {
	mi := &file_deployment_v1_cluster_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubeConfigInfo.ProtoReflect.Descriptor instead.
func (*KubeConfigInfo) Descriptor() ([]byte, []int) {
	return file_deployment_v1_cluster_service_proto_rawDescGZIP(), []int{2}
}

func (x *KubeConfigInfo) GetKubeConfig() []byte {
	if x != nil {
		return x.KubeConfig
	}
	return nil
}

// Request message for the ListClusters method.
type ListClustersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional. A string array that filters cluster labels to be
	// displayed ie color=blue,customer=intel. Labels separated by a comma.
	Labels []string `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty"`
	// Optional. Select field and order based on which cluster list will be sorted.
	OrderBy string `protobuf:"bytes,2,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	// Optional. Selection criteria to list clusters.
	Filter string `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	// Optional. Select count of clusters to be listed per page.
	PageSize uint32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Optional. Offset is used to select the correct page from which clusters list will be displayed.
	// (E.g If there are 10 clusters, page size is 2 and offset is set as 4, then the response will display clusters 5 and 6).
	Offset        uint32 `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClustersRequest) Reset() {
	*x = ListClustersRequest{}
	mi := &file_deployment_v1_cluster_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClustersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClustersRequest) ProtoMessage() {}

func (x *ListClustersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deployment_v1_cluster_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClustersRequest.ProtoReflect.Descriptor instead.
func (*ListClustersRequest) Descriptor() ([]byte, []int) {
	return file_deployment_v1_cluster_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListClustersRequest) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ListClustersRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *ListClustersRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListClustersRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListClustersRequest) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

// Response message for the ListClusters method.
type ListClustersResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A list of Cluster Objects.
	Clusters      []*ClusterInfo `protobuf:"bytes,1,rep,name=clusters,proto3" json:"clusters,omitempty"`
	TotalElements int32          `protobuf:"varint,2,opt,name=total_elements,json=totalElements,proto3" json:"total_elements,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClustersResponse) Reset() {
	*x = ListClustersResponse{}
	mi := &file_deployment_v1_cluster_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClustersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClustersResponse) ProtoMessage() {}

func (x *ListClustersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_deployment_v1_cluster_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClustersResponse.ProtoReflect.Descriptor instead.
func (*ListClustersResponse) Descriptor() ([]byte, []int) {
	return file_deployment_v1_cluster_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListClustersResponse) GetClusters() []*ClusterInfo {
	if x != nil {
		return x.Clusters
	}
	return nil
}

func (x *ListClustersResponse) GetTotalElements() int32 {
	if x != nil {
		return x.TotalElements
	}
	return 0
}

// Request message for GetCluster method.
type GetClusterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The id of the cluster.
	ClusterId     string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetClusterRequest) Reset() {
	*x = GetClusterRequest{}
	mi := &file_deployment_v1_cluster_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterRequest) ProtoMessage() {}

func (x *GetClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deployment_v1_cluster_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterRequest.ProtoReflect.Descriptor instead.
func (*GetClusterRequest) Descriptor() ([]byte, []int) {
	return file_deployment_v1_cluster_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetClusterRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

// Response message for GetCluster method.
type GetClusterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cluster       *Cluster               `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetClusterResponse) Reset() {
	*x = GetClusterResponse{}
	mi := &file_deployment_v1_cluster_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClusterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterResponse) ProtoMessage() {}

func (x *GetClusterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_deployment_v1_cluster_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterResponse.ProtoReflect.Descriptor instead.
func (*GetClusterResponse) Descriptor() ([]byte, []int) {
	return file_deployment_v1_cluster_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetClusterResponse) GetCluster() *Cluster {
	if x != nil {
		return x.Cluster
	}
	return nil
}

// Cluster defines the message for the Cluster object.
type ClusterInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID is the cluster id which ECM generates and assigns to the Rancher cluster name.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// List of cluster labels retrieved from Fleet cluster object.
	Labels map[string]string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// The creation time of the cluster retrieved from Fleet cluster object.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Name is the display name which user provides and ECM creates and assigns clustername label to Fleet cluster object.
	Name          string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterInfo) Reset() {
	*x = ClusterInfo{}
	mi := &file_deployment_v1_cluster_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterInfo) ProtoMessage() {}

func (x *ClusterInfo) ProtoReflect() protoreflect.Message {
	mi := &file_deployment_v1_cluster_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterInfo.ProtoReflect.Descriptor instead.
func (*ClusterInfo) Descriptor() ([]byte, []int) {
	return file_deployment_v1_cluster_service_proto_rawDescGZIP(), []int{7}
}

func (x *ClusterInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ClusterInfo) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ClusterInfo) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *ClusterInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_deployment_v1_cluster_service_proto protoreflect.FileDescriptor

const file_deployment_v1_cluster_service_proto_rawDesc = "" +
	"\n" +
	"#deployment/v1/cluster_service.proto\x12\rdeployment.v1\x1a\x1bbuf/validate/validate.proto\x1a\x1ddeployment/v1/resources.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"k\n" +
	"\x14GetKubeConfigRequest\x12S\n" +
	"\n" +
	"cluster_id\x18\x02 \x01(\tB4\xe0A\x02\xbaH.r,\x10\x01\x18(2&^[a-z0-9][a-z0-9-]{0,38}[a-z0-9]{0,1}$R\tclusterId\"`\n" +
	"\x15GetKubeConfigResponse\x12G\n" +
	"\x10kube_config_info\x18\x01 \x01(\v2\x1d.deployment.v1.KubeConfigInfoR\x0ekubeConfigInfo\"6\n" +
	"\x0eKubeConfigInfo\x12$\n" +
	"\vkube_config\x18\x01 \x01(\fB\x03\xe0A\x03R\n" +
	"kubeConfig\"\x87\x02\n" +
	"\x13ListClustersRequest\x12#\n" +
	"\x06labels\x18\x01 \x03(\tB\v\xe0A\x01\xbaH\x05\x92\x01\x02\b\x00R\x06labels\x12W\n" +
	"\border_by\x18\x02 \x01(\tB<\xe0A\x01\xbaH6r4\x18d20^(name|id|status|created_time)?(\\s+(asc|desc))?$R\aorderBy\x12#\n" +
	"\x06filter\x18\x03 \x01(\tB\v\xe0A\x01\xbaH\x05r\x03\x18\xf4\x03R\x06filter\x12)\n" +
	"\tpage_size\x18\x04 \x01(\rB\f\xe0A\x01\xbaH\x06*\x04\x18d(\x00R\bpageSize\x12\"\n" +
	"\x06offset\x18\x05 \x01(\rB\n" +
	"\xe0A\x01\xbaH\x04*\x02(\x00R\x06offset\"\x7f\n" +
	"\x14ListClustersResponse\x12;\n" +
	"\bclusters\x18\x01 \x03(\v2\x1a.deployment.v1.ClusterInfoB\x03\xe0A\x02R\bclusters\x12*\n" +
	"\x0etotal_elements\x18\x02 \x01(\x05B\x03\xe0A\x02R\rtotalElements\"h\n" +
	"\x11GetClusterRequest\x12S\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB4\xe0A\x02\xbaH.r,\x10\x01\x18(2&^[a-z0-9][a-z0-9-]{0,38}[a-z0-9]{0,1}$R\tclusterId\"K\n" +
	"\x12GetClusterResponse\x125\n" +
	"\acluster\x18\x01 \x01(\v2\x16.deployment.v1.ClusterB\x03\xe0A\x03R\acluster\"\xfd\x01\n" +
	"\vClusterInfo\x12\x13\n" +
	"\x02id\x18\x01 \x01(\tB\x03\xe0A\x03R\x02id\x12C\n" +
	"\x06labels\x18\x02 \x03(\v2&.deployment.v1.ClusterInfo.LabelsEntryB\x03\xe0A\x03R\x06labels\x12@\n" +
	"\vcreate_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampB\x03\xe0A\x03R\n" +
	"createTime\x12\x17\n" +
	"\x04name\x18\x04 \x01(\tB\x03\xe0A\x03R\x04name\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x012\xdb\x02\n" +
	"\x0eClusterService\x12\\\n" +
	"\rGetKubeConfig\x12#.deployment.v1.GetKubeConfigRequest\x1a$.deployment.v1.GetKubeConfigResponse\"\x00\x12q\n" +
	"\fListClusters\x12\".deployment.v1.ListClustersRequest\x1a#.deployment.v1.ListClustersResponse\"\x18\x82\xd3\xe4\x93\x02\x12\x12\x10/adm/v1/clusters\x12x\n" +
	"\n" +
	"GetCluster\x12 .deployment.v1.GetClusterRequest\x1a!.deployment.v1.GetClusterResponse\"%\x82\xd3\xe4\x93\x02\x1f\x12\x1d/adm/v1/clusters/{cluster_id}B\xed\x01\n" +
	"\x11com.deployment.v1B\x13ClusterServiceProtoP\x01Zngithub.com/open-edge-platform/app-orch-deployment/app-deployment-manager/api/nbi/v2/deployment/v1;deploymentv1\xa2\x02\x03DXX\xaa\x02\rDeployment.V1\xca\x02\rDeployment\\V1\xe2\x02\x19Deployment\\V1\\GPBMetadata\xea\x02\x0eDeployment::V1b\x06proto3"

var (
	file_deployment_v1_cluster_service_proto_rawDescOnce sync.Once
	file_deployment_v1_cluster_service_proto_rawDescData []byte
)

func file_deployment_v1_cluster_service_proto_rawDescGZIP() []byte {
	file_deployment_v1_cluster_service_proto_rawDescOnce.Do(func() {
		file_deployment_v1_cluster_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_deployment_v1_cluster_service_proto_rawDesc), len(file_deployment_v1_cluster_service_proto_rawDesc)))
	})
	return file_deployment_v1_cluster_service_proto_rawDescData
}

var file_deployment_v1_cluster_service_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_deployment_v1_cluster_service_proto_goTypes = []any{
	(*GetKubeConfigRequest)(nil),  // 0: deployment.v1.GetKubeConfigRequest
	(*GetKubeConfigResponse)(nil), // 1: deployment.v1.GetKubeConfigResponse
	(*KubeConfigInfo)(nil),        // 2: deployment.v1.KubeConfigInfo
	(*ListClustersRequest)(nil),   // 3: deployment.v1.ListClustersRequest
	(*ListClustersResponse)(nil),  // 4: deployment.v1.ListClustersResponse
	(*GetClusterRequest)(nil),     // 5: deployment.v1.GetClusterRequest
	(*GetClusterResponse)(nil),    // 6: deployment.v1.GetClusterResponse
	(*ClusterInfo)(nil),           // 7: deployment.v1.ClusterInfo
	nil,                           // 8: deployment.v1.ClusterInfo.LabelsEntry
	(*Cluster)(nil),               // 9: deployment.v1.Cluster
	(*timestamppb.Timestamp)(nil), // 10: google.protobuf.Timestamp
}
var file_deployment_v1_cluster_service_proto_depIdxs = []int32{
	2,  // 0: deployment.v1.GetKubeConfigResponse.kube_config_info:type_name -> deployment.v1.KubeConfigInfo
	7,  // 1: deployment.v1.ListClustersResponse.clusters:type_name -> deployment.v1.ClusterInfo
	9,  // 2: deployment.v1.GetClusterResponse.cluster:type_name -> deployment.v1.Cluster
	8,  // 3: deployment.v1.ClusterInfo.labels:type_name -> deployment.v1.ClusterInfo.LabelsEntry
	10, // 4: deployment.v1.ClusterInfo.create_time:type_name -> google.protobuf.Timestamp
	0,  // 5: deployment.v1.ClusterService.GetKubeConfig:input_type -> deployment.v1.GetKubeConfigRequest
	3,  // 6: deployment.v1.ClusterService.ListClusters:input_type -> deployment.v1.ListClustersRequest
	5,  // 7: deployment.v1.ClusterService.GetCluster:input_type -> deployment.v1.GetClusterRequest
	1,  // 8: deployment.v1.ClusterService.GetKubeConfig:output_type -> deployment.v1.GetKubeConfigResponse
	4,  // 9: deployment.v1.ClusterService.ListClusters:output_type -> deployment.v1.ListClustersResponse
	6,  // 10: deployment.v1.ClusterService.GetCluster:output_type -> deployment.v1.GetClusterResponse
	8,  // [8:11] is the sub-list for method output_type
	5,  // [5:8] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_deployment_v1_cluster_service_proto_init() }
func file_deployment_v1_cluster_service_proto_init() {
	if File_deployment_v1_cluster_service_proto != nil {
		return
	}
	file_deployment_v1_resources_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_deployment_v1_cluster_service_proto_rawDesc), len(file_deployment_v1_cluster_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_deployment_v1_cluster_service_proto_goTypes,
		DependencyIndexes: file_deployment_v1_cluster_service_proto_depIdxs,
		MessageInfos:      file_deployment_v1_cluster_service_proto_msgTypes,
	}.Build()
	File_deployment_v1_cluster_service_proto = out.File
	file_deployment_v1_cluster_service_proto_goTypes = nil
	file_deployment_v1_cluster_service_proto_depIdxs = nil
}
