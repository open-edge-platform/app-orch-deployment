# Generated with protoc-gen-openapi
# https://github.com/kollalabs/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Application Deployment Manager API
    description: Application Deployment Manager service providing operations for deploying and managing applications.
    version: 2.0.0
paths:
    /deployment.orchestrator.apis/v1/clusters:
        get:
            tags:
                - ClusterService
            summary: ListClusters
            description: Gets a list of all cluster objects.
            operationId: ClusterService_ListClusters
            parameters:
                - name: labels
                  in: query
                  description: Optional. A string array that filters cluster labels to be displayed ie color=blue,customer=intel. Labels separated by a comma.
                  schema:
                    maxItems: 100
                    type: array
                    items:
                        maxLength: 200
                        minLength: 1
                        pattern: (^$)|^[a-z0-9]([-_.=,a-z0-9]{0,198}[a-z0-9])?$
                        type: string
                - name: orderBy
                  in: query
                  description: Optional. Select field and order based on which cluster list will be sorted.
                  schema:
                    type: string
                - name: filter
                  in: query
                  description: Optional. Selection criteria to list clusters.
                  schema:
                    type: string
                - name: pageSize
                  in: query
                  description: Optional. Select count of clusters to be listed per page.
                  schema:
                    maximum: !!float 100
                    type: integer
                    format: int32
                - name: offset
                  in: query
                  description: Optional. Offset is used to select the correct page from which clusters list will be displayed. (E.g If there are 10 clusters, page size is 2 and offset is set as 4, then the response will display clusters 5 and 6).
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListClustersResponse'
    /deployment.orchestrator.apis/v1/clusters/{clusterId}:
        get:
            tags:
                - ClusterService
            summary: GetCluster
            description: Gets a cluster object.
            operationId: ClusterService_GetCluster
            parameters:
                - name: clusterId
                  in: path
                  description: Required. The id of the cluster.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetClusterResponse'
    /deployment.orchestrator.apis/v1/deployments:
        get:
            tags:
                - DeploymentService
            summary: ListDeployments
            description: Gets a list of all deployment objects.
            operationId: DeploymentService_ListDeployments
            parameters:
                - name: labels
                  in: query
                  description: Optional. A string array that filters cluster labels to be displayed ie color=blue,customer=intel-corp. Labels separated by a comma.
                  schema:
                    maxItems: 20
                    type: array
                    items:
                        maxLength: 200
                        minLength: 1
                        pattern: (^$)|^[a-z0-9]([-_.=,a-z0-9]{0,198}[a-z0-9])?$
                        type: string
                - name: orderBy
                  in: query
                  description: Optional. Select field and order based on which Deployment list will be sorted.
                  schema:
                    type: string
                - name: filter
                  in: query
                  description: Optional. Selection criteria to list Deployments.
                  schema:
                    type: string
                - name: pageSize
                  in: query
                  description: Optional. Select count of Deployment to be listed per page.
                  schema:
                    maximum: !!float 100
                    type: integer
                    format: int32
                - name: offset
                  in: query
                  description: Optional. Offset is used to select the correct page from which Deployment list will be displayed. (E.g If there are 10 Deployments, page size is 2 and offset is set as 4, then the response will display Deployment 5 and 6.)
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeploymentsResponse'
        post:
            tags:
                - DeploymentService
            summary: CreateDeployment
            description: Creates a deployment object.
            operationId: DeploymentService_CreateDeployment
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Deployment'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateDeploymentResponse'
    /deployment.orchestrator.apis/v1/deployments/clusters/{clusterId}:
        get:
            tags:
                - DeploymentService
            summary: ListDeploymentsPerCluster
            operationId: DeploymentService_ListDeploymentsPerCluster
            parameters:
                - name: clusterId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: labels
                  in: query
                  description: Optional. A string array that filters cluster labels to be displayed ie color=blue,customer=intel-corp. Labels separated by a comma.
                  schema:
                    maxItems: 20
                    type: array
                    items:
                        maxLength: 200
                        minLength: 1
                        pattern: (^$)|^[a-z0-9]([-_.=,a-z0-9]{0,198}[a-z0-9])?$
                        type: string
                - name: orderBy
                  in: query
                  description: Optional. Select field and order based on which Deployment list will be sorted.
                  schema:
                    type: string
                - name: filter
                  in: query
                  description: Optional. Selection criteria to list Deployments.
                  schema:
                    type: string
                - name: pageSize
                  in: query
                  description: Optional. Select count of Deployment to be listed per page.
                  schema:
                    maximum: !!float 100
                    type: integer
                    format: int32
                - name: offset
                  in: query
                  description: Optional. Offset is used to select the correct page from which Deployment list will be displayed. (E.g If there are 10 Deployments, page size is 2 and offset is set as 4, then the response will display Deployment 5 and 6.)
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeploymentsPerClusterResponse'
    /deployment.orchestrator.apis/v1/deployments/{deplId}:
        get:
            tags:
                - DeploymentService
            summary: GetDeployment
            description: Gets a deployment object.
            operationId: DeploymentService_GetDeployment
            parameters:
                - name: deplId
                  in: path
                  description: Required. The id of the deployment to get.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDeploymentResponse'
        put:
            tags:
                - DeploymentService
            summary: UpdateDeployment
            description: Updates a deployment object.
            operationId: DeploymentService_UpdateDeployment
            parameters:
                - name: deplId
                  in: path
                  description: Required. The id of the deployment to update.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Deployment'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateDeploymentResponse'
        delete:
            tags:
                - DeploymentService
            summary: DeleteDeployment
            description: Deletes a deployment object.
            operationId: DeploymentService_DeleteDeployment
            parameters:
                - name: deplId
                  in: path
                  description: Required. The id of the deployment to delete.
                  required: true
                  schema:
                    type: string
                - name: deleteType
                  in: query
                  description: 'Required. Different delete types to handle parent and child lists, for dependency support. Available options: PARENT_ONLY, ALL.'
                  schema:
                    enum:
                        - PARENT_ONLY
                        - ALL
                    type: string
                    format: enum
            responses:
                "200":
                    description: OK
                    content: {}
    /deployment.orchestrator.apis/v1/deployments/{deplId}/clusters:
        get:
            tags:
                - DeploymentService
            summary: ListDeploymentClusters
            description: Gets a list of all deployment cluster objects.
            operationId: DeploymentService_ListDeploymentClusters
            parameters:
                - name: deplId
                  in: path
                  description: Required. The id of the deployment to get.
                  required: true
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  description: Optional. Select field and order based on which Deployment cluster list will be sorted.
                  schema:
                    type: string
                - name: filter
                  in: query
                  description: Optional. Selection criteria to list Deployment clusters.
                  schema:
                    type: string
                - name: pageSize
                  in: query
                  description: Optional. Select count of Deployment clusters to be listed per page.
                  schema:
                    maximum: !!float 100
                    type: integer
                    format: int32
                - name: offset
                  in: query
                  description: Optional. Offset is used to select the correct page from which Deployment clusters list will be displayed. (E.g If there are 10 Deployment clusters, page size is 2 and offset is set as 4, then the response will display Deployment clusters 5 and 6.)
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeploymentClustersResponse'
    /deployment.orchestrator.apis/v1/summary/deployments_status:
        get:
            tags:
                - DeploymentService
            summary: GetDeploymentsStatus
            description: Gets all deployment clusters count status.
            operationId: DeploymentService_GetDeploymentsStatus
            parameters:
                - name: labels
                  in: query
                  description: Optional. A string array that filters cluster labels to be displayed ie color=blue,customer=intel-corp. Labels separated by a comma.
                  schema:
                    maxItems: 20
                    type: array
                    items:
                        maxLength: 200
                        minLength: 1
                        pattern: (^$)|^[a-z0-9]([-_.=,a-z0-9]{0,198}[a-z0-9])?$
                        type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDeploymentsStatusResponse'
components:
    schemas:
        App:
            type: object
            properties:
                name:
                    readOnly: true
                    type: string
                    description: The deployment package app name.
                id:
                    readOnly: true
                    type: string
                    description: Id of the app (same as Fleet bundle name) which is, concatenated from name and deploy_id (uid which comes from k8s).
                status:
                    $ref: '#/components/schemas/Deployment_Status'
            description: Details of application.
        Cluster:
            type: object
            properties:
                name:
                    readOnly: true
                    type: string
                    description: Name is the display name which user provides and ECM creates and assigns clustername label to Fleet cluster object.
                id:
                    readOnly: true
                    type: string
                    description: ID is the cluster id which ECM generates and assigns to the Rancher cluster name.
                status:
                    $ref: '#/components/schemas/Deployment_Status'
                apps:
                    readOnly: true
                    maxItems: 100
                    type: array
                    items:
                        $ref: '#/components/schemas/App'
                    description: Apps has per-app details.
            description: Details of cluster.
        ClusterInfo:
            type: object
            properties:
                id:
                    readOnly: true
                    type: string
                    description: ID is the cluster id which ECM generates and assigns to the Rancher cluster name.
                labels:
                    readOnly: true
                    type: object
                    additionalProperties:
                        type: string
                    description: List of cluster labels retrieved from Fleet cluster object.
                createTime:
                    readOnly: true
                    type: string
                    description: The creation time of the cluster retrieved from Fleet cluster object.
                    format: date-time
                name:
                    readOnly: true
                    type: string
                    description: Name is the display name which user provides and ECM creates and assigns clustername label to Fleet cluster object.
            description: Cluster defines the message for the Cluster object.
        CreateDeploymentResponse:
            required:
                - deploymentId
            type: object
            properties:
                deploymentId:
                    maxLength: 40
                    minLength: 1
                    type: string
                    description: Returns the new Deployment Id.
            description: Response message for the CreateDeployment method.
        Deployment:
            required:
                - appName
                - appVersion
            type: object
            properties:
                name:
                    readOnly: true
                    type: string
                    description: Deployment name (unique string assigned by Orchestrator).
                displayName:
                    maxLength: 40
                    pattern: ^([a-zA-Z0-9][\w\- \.\/_]{0,38}[a-zA-Z0-9]{0,1}|)$
                    type: string
                    description: Deployment display name.
                appName:
                    maxLength: 40
                    minLength: 1
                    pattern: ^[a-z0-9][a-z0-9-]{0,38}[a-z0-9]{0,1}$
                    type: string
                    description: The deployment package name to deploy from the catalog.
                appVersion:
                    maxLength: 20
                    minLength: 1
                    pattern: ^[a-z0-9][a-z0-9-.]{0,18}[a-z0-9]{0,1}$
                    type: string
                    description: The version of the deployment package.
                profileName:
                    maxLength: 40
                    pattern: ^[a-z0-9]*[a-z0-9-]{0,38}[a-z0-9]{0,1}$
                    type: string
                    description: The selected profile name to be used for the base Helm values of the different applications in the deployment package
                createTime:
                    readOnly: true
                    type: string
                    description: The creation time of the deployment.
                    format: date-time
                deployId:
                    readOnly: true
                    type: string
                    description: The id of the deployment.
                overrideValues:
                    maxItems: 100
                    type: array
                    items:
                        $ref: '#/components/schemas/OverrideValues'
                    description: The Override values can be used to override any of the base profile values based on Deployment scenario.
                targetClusters:
                    maxItems: 100
                    type: array
                    items:
                        $ref: '#/components/schemas/TargetClusters'
                    description: Cluster labels on which we want to deploy the application.
                status:
                    $ref: '#/components/schemas/Deployment_Status'
                apps:
                    readOnly: true
                    maxItems: 100
                    type: array
                    items:
                        $ref: '#/components/schemas/App'
                    description: Application details.
                deploymentType:
                    maxLength: 20
                    pattern: ^[a-z0-9]*[a-z0-9-]{0,18}[a-z0-9]{0,1}$
                    type: string
                    description: The deployment type for the target cluster deployment can be either auto-scaling or targeted. In Auto-scaling type, the application will be automatically deployed on all the clusters which match the Target cluster label. In Targeted type, the user has to select among pre created clusters to deploy the application.
                networkName:
                    maxLength: 40
                    pattern: ^[a-z0-9]*[a-z0-9-]{0,18}[a-z0-9]{0,1}$
                    type: string
                    description: network_name is the name of the interconnect network that deployment be part of
                serviceExports:
                    maxItems: 100
                    type: array
                    items:
                        $ref: '#/components/schemas/ServiceExport'
                allAppTargetClusters:
                    $ref: '#/components/schemas/TargetClusters'
            description: Deployment defines the specification to deploy a Deployment Package onto a set of clusters.
        DeploymentInstancesCluster:
            type: object
            properties:
                deploymentUid:
                    readOnly: true
                    type: string
                    description: Deployment CR UID.
                deploymentName:
                    readOnly: true
                    type: string
                    description: Deployment name (unique string assigned by Orchestrator).
                deploymentDisplayName:
                    maxLength: 40
                    pattern: ^([a-zA-Z0-9][\w\- \.\/_]{0,38}[a-zA-Z0-9]{0,1}|)$
                    type: string
                    description: Deployment display name.
                status:
                    $ref: '#/components/schemas/Deployment_Status'
                apps:
                    readOnly: true
                    maxItems: 100
                    type: array
                    items:
                        $ref: '#/components/schemas/App'
                    description: Apps has per-app details.
        Deployment_Status:
            type: object
            properties:
                state:
                    readOnly: true
                    enum:
                        - UNKNOWN
                        - RUNNING
                        - DOWN
                        - INTERNAL_ERROR
                        - DEPLOYING
                        - UPDATING
                        - TERMINATING
                        - ERROR
                        - NO_TARGET_CLUSTERS
                    type: string
                    format: enum
                message:
                    readOnly: true
                    type: string
                summary:
                    $ref: '#/components/schemas/Summary'
            description: Status has details of the deployment.
        GetClusterResponse:
            type: object
            properties:
                cluster:
                    $ref: '#/components/schemas/Cluster'
            description: Response message for GetCluster method.
        GetDeploymentResponse:
            required:
                - deployment
            type: object
            properties:
                deployment:
                    $ref: '#/components/schemas/Deployment'
            description: Response message for the GetDeployment method.
        GetDeploymentsStatusResponse:
            type: object
            properties:
                total:
                    readOnly: true
                    type: integer
                    format: int32
                running:
                    readOnly: true
                    type: integer
                    format: int32
                down:
                    readOnly: true
                    type: integer
                    format: int32
                deploying:
                    readOnly: true
                    type: integer
                    format: int32
                updating:
                    readOnly: true
                    type: integer
                    format: int32
                terminating:
                    readOnly: true
                    type: integer
                    format: int32
                error:
                    readOnly: true
                    type: integer
                    format: int32
                unknown:
                    readOnly: true
                    type: integer
                    format: int32
            description: Response message for the GetDeploymentsStatus method.
        ListClustersResponse:
            required:
                - clusters
                - totalElements
            type: object
            properties:
                clusters:
                    maxItems: 1000
                    type: array
                    items:
                        $ref: '#/components/schemas/ClusterInfo'
                    description: A list of Cluster Objects.
                totalElements:
                    type: integer
                    format: int32
            description: Response message for the ListClusters method.
        ListDeploymentClustersResponse:
            required:
                - clusters
                - totalElements
            type: object
            properties:
                clusters:
                    maxItems: 1000
                    type: array
                    items:
                        $ref: '#/components/schemas/Cluster'
                totalElements:
                    type: integer
                    format: int32
            description: Response message for ListDeploymentClusters method.
        ListDeploymentsPerClusterResponse:
            required:
                - deploymentInstancesCluster
                - totalElements
            type: object
            properties:
                deploymentInstancesCluster:
                    maxItems: 1000
                    type: array
                    items:
                        $ref: '#/components/schemas/DeploymentInstancesCluster'
                    description: A list of Deployment Instance Cluster Objects.
                totalElements:
                    type: integer
                    format: int32
            description: Response message for the ListDeploymentsPerCluster method.
        ListDeploymentsResponse:
            required:
                - deployments
                - totalElements
            type: object
            properties:
                deployments:
                    maxItems: 1000
                    type: array
                    items:
                        $ref: '#/components/schemas/Deployment'
                    description: A list of Deployment Objects.
                totalElements:
                    type: integer
                    format: int32
            description: Response message for the ListDeployments method.
        OverrideValues:
            required:
                - appName
            type: object
            properties:
                appName:
                    maxLength: 40
                    minLength: 1
                    pattern: ^[a-z0-9][a-z0-9-]{0,38}[a-z0-9]{0,1}$
                    type: string
                    description: deployment package name to use when overriding values.
                targetNamespace:
                    maxLength: 63
                    pattern: (^$)|^[a-z0-9]([-a-z0-9]{0,61}[a-z0-9])?$
                    type: string
                    description: The namespace to deploy the app onto, default namespace is default.
                values:
                    type: object
                    description: The YAML representing Helm overrides
            description: The Override values can be used to override any of the base helm values of applications based on Deployment scenario.
        ServiceExport:
            required:
                - appName
            type: object
            properties:
                appName:
                    maxLength: 40
                    minLength: 1
                    pattern: ^[a-z0-9][a-z0-9-]{0,38}[a-z0-9]{0,1}$
                    type: string
                enabled:
                    type: boolean
        Summary:
            type: object
            properties:
                total:
                    readOnly: true
                    type: integer
                    description: Total count of apps/clusters in the deployment, value from owned GitRepo objects.
                    format: int32
                running:
                    readOnly: true
                    type: integer
                    description: Number of running apps/clusters in the deployment, value from owned GitRepo objects.
                    format: int32
                down:
                    readOnly: true
                    type: integer
                    description: Number of down apps/clusters in the deployment.
                    format: int32
                type:
                    readOnly: true
                    type: string
                    description: Type of thing that we're counting, ie clusters, apps.
                unknown:
                    readOnly: true
                    type: integer
                    description: Unknown status to indicate cluster not reachable.
                    format: int32
            description: Count of status.
        TargetClusters:
            type: object
            properties:
                appName:
                    maxLength: 40
                    pattern: (^$)|^[a-z0-9][a-z0-9-]{0,38}[a-z0-9]{0,1}$
                    type: string
                    description: The targeted deployment package name.
                labels:
                    type: object
                    additionalProperties:
                        type: string
                    description: Cluster labels to match the target cluster when auto-scaling deployment.
                clusterId:
                    type: string
                    description: Cluster id to match the target cluster when targeted deployment.
            description: Set target clusters based on labels.
        UpdateDeploymentResponse:
            required:
                - deployment
            type: object
            properties:
                deployment:
                    $ref: '#/components/schemas/Deployment'
            description: Response message for the UpdateDeployment method.
tags:
    - name: ClusterService
      description: ClusterService provides RPC methods to get clusters information.
    - name: DeploymentService
      description: DeploymentService provides API operations for catalogs and applications.
