# yamllint disable-file
# SPDX-FileCopyrightText: (C) 2023 Intel Corporation
#
# SPDX-License-Identifier: Apache-2.0
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "app-service-proxy.fullname" . }}
spec:
  type: {{ .Values.service.apiProxy.type }}
  selector:
    {{- include "app-service-proxy.selectorLabels" . | nindent 4 }}
  ports:
    - protocol: TCP
      name: http
      port: {{ .Values.service.apiProxy.port }}
    {{- if eq .Values.service.apiProxy.type "NodePort" }}
      nodePort: {{ .Values.service.nodePort }}
    {{- end }}
---
{{- if .Values.traefik.enabled -}}
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: {{ include "app-service-proxy.fullname" . }}
  namespace: {{ .Values.traefik.gatewayNamespace }}
spec:
  headers:
    customRequestHeaders:
      Host: {{ include "app-service-proxy.fullname" . }}.{{ .Release.Namespace }}.svc
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: {{ include "app-service-proxy.fullname" . }}-secure-headers
  namespace: {{ .Values.traefik.gatewayNamespace }}
spec:
  headers:
    customResponseHeaders:
      $wsep: ""
      Cache-Control: no-store, max-age=0
      Content-Security-Policy: ' default-src ''self''; form-action ''self''; object-src
        ''none''; frame-ancestors ''none''; script-src ''self'' ''unsafe-eval'' https://app-service-proxy.kind.internal;
        style-src ''self'' ''unsafe-inline''; img-src ''self'' data:; connect-src
        ''self'' https://keycloak.kind.internal https://app-service-proxy.kind.internal ; upgrade-insecure-requests;
        block-all-mixed-content; frame-src ''self'' https://keycloak.kind.internal https://app-service-proxy.kind.internal'
      Cross-Origin-Embedder-Policy: require-corp
      Cross-Origin-Opener-Policy: same-origin
      Cross-Origin-Resource-Policy: cross-origin
      Host-Header: ""
      K-Proxy-Request: ""
      Liferay-Portal: ""
      OracleCommerceCloud-Version: ""
      Pega-Host: ""
      Permissions-Policy: accelerometer=(),ambient-light-sensor=(),autoplay=(),battery=(),camera=(),display-capture=(),document-domain=(),encrypted-media=(),fullscreen=(),gamepad=(),geolocation=(),gyroscope=(),layout-animations=(self),legacy-image-formats=(self),magnetometer=(),microphone=(),midi=(),oversized-images=(self),payment=(),picture-in-picture=(),publickey-credentials-get=(),speaker-selection=(),sync-xhr=(self),unoptimized-images=(self),unsized-media=(self),usb=(),screen-wake-lock=(),web-share=(),xr-spatial-tracking=()
      Powered-By: ""
      Pragma: no-cache
      Product: ""
      Server: ""
      SourceMap: ""
      X-AspNet-Version: ""
      X-AspNetMvc-Version: ""
      X-Atmosphere-error: ""
      X-Atmosphere-first-request: ""
      X-Atmosphere-tracking-id: ""
      X-B3-ParentSpanId: ""
      X-B3-Sampled: ""
      X-B3-SpanId: ""
      X-B3-TraceId: ""
      X-CF-Powered-By: ""
      X-CMS: ""
      X-Content-Encoded-By: ""
      X-Envoy-Attempt-Count: ""
      X-Envoy-External-Address: ""
      X-Envoy-Internal: ""
      X-Envoy-Original-Dst-Host: ""
      X-Envoy-Upstream-Service-Time: ""
      X-Framework: ""
      X-Generated-By: ""
      X-Generator: ""
      X-LiteSpeed-Cache: ""
      X-LiteSpeed-Purge: ""
      X-LiteSpeed-Tag: ""
      X-LiteSpeed-Vary: ""
      X-Litespeed-Cache-Control: ""
      X-Mod-Pagespeed: ""
      X-Nextjs-Cache: ""
      X-Nextjs-Matched-Path: ""
      X-Nextjs-Page: ""
      X-Nextjs-Redirect: ""
      X-Old-Content-Length: ""
      X-OneAgent-JS-Injection: ""
      X-Page-Speed: ""
      X-Permitted-Cross-Domain-Policies: none
      X-Php-Version: ""
      X-Powered-By: ""
      X-Powered-By-Plesk: ""
      X-Powered-CMS: ""
      X-Redirect-By: ""
      X-Server-Powered-By: ""
      X-SourceFiles: ""
      X-SourceMap: ""
      X-Turbo-Charged-By: ""
      X-Umbraco-Version: ""
      X-Varnish-Backend: ""
      X-Varnish-Server: ""
      X-dtAgentId: ""
      X-dtHealthCheck: ""
      X-dtInjectedServlet: ""
      X-ruxit-JS-Agent: ""
    referrerPolicy: no-referrer
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: {{ include "app-service-proxy.fullname" . }}
  namespace: {{ .Values.traefik.gatewayNamespace }}
spec:
  entryPoints: # We listen to requests coming from ports 443
    - websecure
  routes:
    - match: {{ required "Traefik route match is required!" .Values.traefik.matchRoute }}
      kind: Rule
      middlewares:
        - name: {{ include "app-service-proxy.fullname" . }}
      services:
        - name: {{ include "app-service-proxy.fullname" . }}
          port: {{ .Values.service.apiProxy.port }}
          scheme: http
          namespace: {{ .Release.Namespace }}
  tls:
    # Use the secret generated by cert-manager that resides in gateway-system namespace
    secretName: {{ .Values.traefik.secretName }}
{{- if .Values.traefik.tlsOption }}
    options:
      name: {{ .Values.traefik.tlsOption }}
      namespace: {{ .Values.traefik.gatewayNamespace }}
{{- end }}
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: {{ include "app-service-proxy.fullname" . }}-src
  namespace: {{ .Values.traefik.gatewayNamespace }}
spec:
  entryPoints: # We listen to requests coming from ports 443
    - websecure
  routes:
    - match: {{ required "Traefik route match is required!" .Values.traefik.matchRouteSrc }}
      kind: Rule
      middlewares:
        - name: {{ include "app-service-proxy.fullname" . }}
        - name: {{ include "app-service-proxy.fullname" . }}-secure-headers
      services:
        - name: {{ include "app-service-proxy.fullname" . }}
          port: {{ .Values.service.apiProxy.port }}
          scheme: http
          namespace: {{ .Release.Namespace }}
  tls:
    # Use the secret generated by cert-manager that resides in gateway-system namespace
    secretName: {{ .Values.traefik.secretName }}
{{- if .Values.traefik.tlsOption }}
    options:
      name: {{ .Values.traefik.tlsOption }}
      namespace: {{ .Values.traefik.gatewayNamespace }}
{{- end }}
{{- end }}
---
{{- if .Values.openpolicyagent.enabled -}}
{{- if .Values.service.opa.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "app-service-proxy.fullname" . }}-opa
  labels:
    {{- include "app-service-proxy.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.opa.type }}
  ports:
    - port: {{ .Values.service.opa.port }}
      protocol: TCP
      name: http-opa
  selector:
    {{- include "app-service-proxy.selectorLabels" . | nindent 4 }}
{{- end}}
{{- end}}
