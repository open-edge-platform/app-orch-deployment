// SPDX-FileCopyrightText: (C) 2024 Intel Corporation
//
// SPDX-License-Identifier: Apache-2.0
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/open-edge-platform/app-orch-deployment/app-interconnect/pkg/apis/network/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// NetworkClusterLister helps list NetworkClusters.
// All objects returned here must be treated as read-only.
type NetworkClusterLister interface {
	// List lists all NetworkClusters in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.NetworkCluster, err error)
	// Get retrieves the NetworkCluster from the index for a given name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.NetworkCluster, error)
	NetworkClusterListerExpansion
}

// networkClusterLister implements the NetworkClusterLister interface.
type networkClusterLister struct {
	indexer cache.Indexer
}

// NewNetworkClusterLister returns a new NetworkClusterLister.
func NewNetworkClusterLister(indexer cache.Indexer) NetworkClusterLister {
	return &networkClusterLister{indexer: indexer}
}

// List lists all NetworkClusters in the indexer.
func (s *networkClusterLister) List(selector labels.Selector) (ret []*v1alpha1.NetworkCluster, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.NetworkCluster))
	})
	return ret, err
}

// Get retrieves the NetworkCluster from the index for a given name.
func (s *networkClusterLister) Get(name string) (*v1alpha1.NetworkCluster, error) {
	obj, exists, err := s.indexer.GetByKey(name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("networkcluster"), name)
	}
	return obj.(*v1alpha1.NetworkCluster), nil
}
