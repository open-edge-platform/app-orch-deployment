// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// LinuxDeviceCgroup LinuxDeviceCgroup represents a device rule for the devices specified to
// the device controller
//
// swagger:model LinuxDeviceCgroup
type LinuxDeviceCgroup struct {

	// Cgroup access permissions format, rwm.
	Access string `json:"access,omitempty"`

	// Allow or deny
	Allow bool `json:"allow,omitempty"`

	// Major is the device's major number.
	Major int64 `json:"major,omitempty"`

	// Minor is the device's minor number.
	Minor int64 `json:"minor,omitempty"`

	// Device type, block, char, etc.
	Type string `json:"type,omitempty"`
}

// Validate validates this linux device cgroup
func (m *LinuxDeviceCgroup) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this linux device cgroup based on context it is used
func (m *LinuxDeviceCgroup) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *LinuxDeviceCgroup) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LinuxDeviceCgroup) UnmarshalBinary(b []byte) error {
	var res LinuxDeviceCgroup
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
