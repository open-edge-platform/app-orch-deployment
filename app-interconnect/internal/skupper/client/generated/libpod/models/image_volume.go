// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ImageVolume ImageVolume is a volume based on a container image.  The container image is
// first mounted on the host and is then bind-mounted into the container.  An
// ImageVolume is always mounted read only.
//
// swagger:model ImageVolume
type ImageVolume struct {

	// Destination is the absolute path of the mount in the container.
	Destination string `json:"Destination,omitempty"`

	// ReadWrite sets the volume writable.
	ReadWrite bool `json:"ReadWrite,omitempty"`

	// Source is the source of the image volume.  The image can be referred
	// to by name and by ID.
	Source string `json:"Source,omitempty"`
}

// Validate validates this image volume
func (m *ImageVolume) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this image volume based on context it is used
func (m *ImageVolume) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ImageVolume) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ImageVolume) UnmarshalBinary(b []byte) error {
	var res ImageVolume
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
