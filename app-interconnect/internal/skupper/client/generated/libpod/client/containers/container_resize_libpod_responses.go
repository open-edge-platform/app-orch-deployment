// Code generated by go-swagger; DO NOT EDIT.

package containers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ContainerResizeLibpodReader is a Reader for the ContainerResizeLibpod structure.
type ContainerResizeLibpodReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ContainerResizeLibpodReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewContainerResizeLibpodOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewContainerResizeLibpodNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewContainerResizeLibpodConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewContainerResizeLibpodInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewContainerResizeLibpodOK creates a ContainerResizeLibpodOK with default headers values
func NewContainerResizeLibpodOK() *ContainerResizeLibpodOK {
	return &ContainerResizeLibpodOK{}
}

/*
ContainerResizeLibpodOK describes a response with status code 200, with default header values.

Success
*/
type ContainerResizeLibpodOK struct {
	Payload interface{}
}

// IsSuccess returns true when this container resize libpod o k response has a 2xx status code
func (o *ContainerResizeLibpodOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this container resize libpod o k response has a 3xx status code
func (o *ContainerResizeLibpodOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this container resize libpod o k response has a 4xx status code
func (o *ContainerResizeLibpodOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this container resize libpod o k response has a 5xx status code
func (o *ContainerResizeLibpodOK) IsServerError() bool {
	return false
}

// IsCode returns true when this container resize libpod o k response a status code equal to that given
func (o *ContainerResizeLibpodOK) IsCode(code int) bool {
	return code == 200
}

func (o *ContainerResizeLibpodOK) Error() string {
	return fmt.Sprintf("[POST /libpod/containers/{name}/resize][%d] containerResizeLibpodOK  %+v", 200, o.Payload)
}

func (o *ContainerResizeLibpodOK) String() string {
	return fmt.Sprintf("[POST /libpod/containers/{name}/resize][%d] containerResizeLibpodOK  %+v", 200, o.Payload)
}

func (o *ContainerResizeLibpodOK) GetPayload() interface{} {
	return o.Payload
}

func (o *ContainerResizeLibpodOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewContainerResizeLibpodNotFound creates a ContainerResizeLibpodNotFound with default headers values
func NewContainerResizeLibpodNotFound() *ContainerResizeLibpodNotFound {
	return &ContainerResizeLibpodNotFound{}
}

/*
ContainerResizeLibpodNotFound describes a response with status code 404, with default header values.

No such container
*/
type ContainerResizeLibpodNotFound struct {
	Payload *ContainerResizeLibpodNotFoundBody
}

// IsSuccess returns true when this container resize libpod not found response has a 2xx status code
func (o *ContainerResizeLibpodNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this container resize libpod not found response has a 3xx status code
func (o *ContainerResizeLibpodNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this container resize libpod not found response has a 4xx status code
func (o *ContainerResizeLibpodNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this container resize libpod not found response has a 5xx status code
func (o *ContainerResizeLibpodNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this container resize libpod not found response a status code equal to that given
func (o *ContainerResizeLibpodNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ContainerResizeLibpodNotFound) Error() string {
	return fmt.Sprintf("[POST /libpod/containers/{name}/resize][%d] containerResizeLibpodNotFound  %+v", 404, o.Payload)
}

func (o *ContainerResizeLibpodNotFound) String() string {
	return fmt.Sprintf("[POST /libpod/containers/{name}/resize][%d] containerResizeLibpodNotFound  %+v", 404, o.Payload)
}

func (o *ContainerResizeLibpodNotFound) GetPayload() *ContainerResizeLibpodNotFoundBody {
	return o.Payload
}

func (o *ContainerResizeLibpodNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ContainerResizeLibpodNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewContainerResizeLibpodConflict creates a ContainerResizeLibpodConflict with default headers values
func NewContainerResizeLibpodConflict() *ContainerResizeLibpodConflict {
	return &ContainerResizeLibpodConflict{}
}

/*
ContainerResizeLibpodConflict describes a response with status code 409, with default header values.

Conflict error in operation
*/
type ContainerResizeLibpodConflict struct {
	Payload *ContainerResizeLibpodConflictBody
}

// IsSuccess returns true when this container resize libpod conflict response has a 2xx status code
func (o *ContainerResizeLibpodConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this container resize libpod conflict response has a 3xx status code
func (o *ContainerResizeLibpodConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this container resize libpod conflict response has a 4xx status code
func (o *ContainerResizeLibpodConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this container resize libpod conflict response has a 5xx status code
func (o *ContainerResizeLibpodConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this container resize libpod conflict response a status code equal to that given
func (o *ContainerResizeLibpodConflict) IsCode(code int) bool {
	return code == 409
}

func (o *ContainerResizeLibpodConflict) Error() string {
	return fmt.Sprintf("[POST /libpod/containers/{name}/resize][%d] containerResizeLibpodConflict  %+v", 409, o.Payload)
}

func (o *ContainerResizeLibpodConflict) String() string {
	return fmt.Sprintf("[POST /libpod/containers/{name}/resize][%d] containerResizeLibpodConflict  %+v", 409, o.Payload)
}

func (o *ContainerResizeLibpodConflict) GetPayload() *ContainerResizeLibpodConflictBody {
	return o.Payload
}

func (o *ContainerResizeLibpodConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ContainerResizeLibpodConflictBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewContainerResizeLibpodInternalServerError creates a ContainerResizeLibpodInternalServerError with default headers values
func NewContainerResizeLibpodInternalServerError() *ContainerResizeLibpodInternalServerError {
	return &ContainerResizeLibpodInternalServerError{}
}

/*
ContainerResizeLibpodInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type ContainerResizeLibpodInternalServerError struct {
	Payload *ContainerResizeLibpodInternalServerErrorBody
}

// IsSuccess returns true when this container resize libpod internal server error response has a 2xx status code
func (o *ContainerResizeLibpodInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this container resize libpod internal server error response has a 3xx status code
func (o *ContainerResizeLibpodInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this container resize libpod internal server error response has a 4xx status code
func (o *ContainerResizeLibpodInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this container resize libpod internal server error response has a 5xx status code
func (o *ContainerResizeLibpodInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this container resize libpod internal server error response a status code equal to that given
func (o *ContainerResizeLibpodInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ContainerResizeLibpodInternalServerError) Error() string {
	return fmt.Sprintf("[POST /libpod/containers/{name}/resize][%d] containerResizeLibpodInternalServerError  %+v", 500, o.Payload)
}

func (o *ContainerResizeLibpodInternalServerError) String() string {
	return fmt.Sprintf("[POST /libpod/containers/{name}/resize][%d] containerResizeLibpodInternalServerError  %+v", 500, o.Payload)
}

func (o *ContainerResizeLibpodInternalServerError) GetPayload() *ContainerResizeLibpodInternalServerErrorBody {
	return o.Payload
}

func (o *ContainerResizeLibpodInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ContainerResizeLibpodInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
ContainerResizeLibpodConflictBody container resize libpod conflict body
swagger:model ContainerResizeLibpodConflictBody
*/
type ContainerResizeLibpodConflictBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this container resize libpod conflict body
func (o *ContainerResizeLibpodConflictBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this container resize libpod conflict body based on context it is used
func (o *ContainerResizeLibpodConflictBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ContainerResizeLibpodConflictBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ContainerResizeLibpodConflictBody) UnmarshalBinary(b []byte) error {
	var res ContainerResizeLibpodConflictBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ContainerResizeLibpodInternalServerErrorBody container resize libpod internal server error body
swagger:model ContainerResizeLibpodInternalServerErrorBody
*/
type ContainerResizeLibpodInternalServerErrorBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this container resize libpod internal server error body
func (o *ContainerResizeLibpodInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this container resize libpod internal server error body based on context it is used
func (o *ContainerResizeLibpodInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ContainerResizeLibpodInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ContainerResizeLibpodInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res ContainerResizeLibpodInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ContainerResizeLibpodNotFoundBody container resize libpod not found body
swagger:model ContainerResizeLibpodNotFoundBody
*/
type ContainerResizeLibpodNotFoundBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this container resize libpod not found body
func (o *ContainerResizeLibpodNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this container resize libpod not found body based on context it is used
func (o *ContainerResizeLibpodNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ContainerResizeLibpodNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ContainerResizeLibpodNotFoundBody) UnmarshalBinary(b []byte) error {
	var res ContainerResizeLibpodNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
