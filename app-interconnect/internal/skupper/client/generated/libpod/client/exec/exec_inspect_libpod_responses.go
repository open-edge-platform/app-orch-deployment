// Code generated by go-swagger; DO NOT EDIT.

package exec

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ExecInspectLibpodReader is a Reader for the ExecInspectLibpod structure.
type ExecInspectLibpodReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ExecInspectLibpodReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewExecInspectLibpodOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewExecInspectLibpodNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewExecInspectLibpodInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewExecInspectLibpodOK creates a ExecInspectLibpodOK with default headers values
func NewExecInspectLibpodOK() *ExecInspectLibpodOK {
	return &ExecInspectLibpodOK{}
}

/*
ExecInspectLibpodOK describes a response with status code 200, with default header values.

no error
*/
type ExecInspectLibpodOK struct {
}

// IsSuccess returns true when this exec inspect libpod o k response has a 2xx status code
func (o *ExecInspectLibpodOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this exec inspect libpod o k response has a 3xx status code
func (o *ExecInspectLibpodOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this exec inspect libpod o k response has a 4xx status code
func (o *ExecInspectLibpodOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this exec inspect libpod o k response has a 5xx status code
func (o *ExecInspectLibpodOK) IsServerError() bool {
	return false
}

// IsCode returns true when this exec inspect libpod o k response a status code equal to that given
func (o *ExecInspectLibpodOK) IsCode(code int) bool {
	return code == 200
}

func (o *ExecInspectLibpodOK) Error() string {
	return fmt.Sprintf("[GET /libpod/exec/{id}/json][%d] execInspectLibpodOK ", 200)
}

func (o *ExecInspectLibpodOK) String() string {
	return fmt.Sprintf("[GET /libpod/exec/{id}/json][%d] execInspectLibpodOK ", 200)
}

func (o *ExecInspectLibpodOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExecInspectLibpodNotFound creates a ExecInspectLibpodNotFound with default headers values
func NewExecInspectLibpodNotFound() *ExecInspectLibpodNotFound {
	return &ExecInspectLibpodNotFound{}
}

/*
ExecInspectLibpodNotFound describes a response with status code 404, with default header values.

No such exec instance
*/
type ExecInspectLibpodNotFound struct {
	Payload *ExecInspectLibpodNotFoundBody
}

// IsSuccess returns true when this exec inspect libpod not found response has a 2xx status code
func (o *ExecInspectLibpodNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this exec inspect libpod not found response has a 3xx status code
func (o *ExecInspectLibpodNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this exec inspect libpod not found response has a 4xx status code
func (o *ExecInspectLibpodNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this exec inspect libpod not found response has a 5xx status code
func (o *ExecInspectLibpodNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this exec inspect libpod not found response a status code equal to that given
func (o *ExecInspectLibpodNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ExecInspectLibpodNotFound) Error() string {
	return fmt.Sprintf("[GET /libpod/exec/{id}/json][%d] execInspectLibpodNotFound  %+v", 404, o.Payload)
}

func (o *ExecInspectLibpodNotFound) String() string {
	return fmt.Sprintf("[GET /libpod/exec/{id}/json][%d] execInspectLibpodNotFound  %+v", 404, o.Payload)
}

func (o *ExecInspectLibpodNotFound) GetPayload() *ExecInspectLibpodNotFoundBody {
	return o.Payload
}

func (o *ExecInspectLibpodNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ExecInspectLibpodNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExecInspectLibpodInternalServerError creates a ExecInspectLibpodInternalServerError with default headers values
func NewExecInspectLibpodInternalServerError() *ExecInspectLibpodInternalServerError {
	return &ExecInspectLibpodInternalServerError{}
}

/*
ExecInspectLibpodInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type ExecInspectLibpodInternalServerError struct {
	Payload *ExecInspectLibpodInternalServerErrorBody
}

// IsSuccess returns true when this exec inspect libpod internal server error response has a 2xx status code
func (o *ExecInspectLibpodInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this exec inspect libpod internal server error response has a 3xx status code
func (o *ExecInspectLibpodInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this exec inspect libpod internal server error response has a 4xx status code
func (o *ExecInspectLibpodInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this exec inspect libpod internal server error response has a 5xx status code
func (o *ExecInspectLibpodInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this exec inspect libpod internal server error response a status code equal to that given
func (o *ExecInspectLibpodInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ExecInspectLibpodInternalServerError) Error() string {
	return fmt.Sprintf("[GET /libpod/exec/{id}/json][%d] execInspectLibpodInternalServerError  %+v", 500, o.Payload)
}

func (o *ExecInspectLibpodInternalServerError) String() string {
	return fmt.Sprintf("[GET /libpod/exec/{id}/json][%d] execInspectLibpodInternalServerError  %+v", 500, o.Payload)
}

func (o *ExecInspectLibpodInternalServerError) GetPayload() *ExecInspectLibpodInternalServerErrorBody {
	return o.Payload
}

func (o *ExecInspectLibpodInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ExecInspectLibpodInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
ExecInspectLibpodInternalServerErrorBody exec inspect libpod internal server error body
swagger:model ExecInspectLibpodInternalServerErrorBody
*/
type ExecInspectLibpodInternalServerErrorBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this exec inspect libpod internal server error body
func (o *ExecInspectLibpodInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this exec inspect libpod internal server error body based on context it is used
func (o *ExecInspectLibpodInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ExecInspectLibpodInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ExecInspectLibpodInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res ExecInspectLibpodInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ExecInspectLibpodNotFoundBody exec inspect libpod not found body
swagger:model ExecInspectLibpodNotFoundBody
*/
type ExecInspectLibpodNotFoundBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this exec inspect libpod not found body
func (o *ExecInspectLibpodNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this exec inspect libpod not found body based on context it is used
func (o *ExecInspectLibpodNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ExecInspectLibpodNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ExecInspectLibpodNotFoundBody) UnmarshalBinary(b []byte) error {
	var res ExecInspectLibpodNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
